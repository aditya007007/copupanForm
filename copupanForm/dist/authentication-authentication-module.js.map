{"version":3,"sources":["webpack:///./node_modules/ngx-captcha/fesm5/ngx-captcha.js","webpack:///./src/app/authentication/auth-home/auth-home.component.html","webpack:///./src/app/authentication/auth-home/auth-home.component.scss","webpack:///./src/app/authentication/auth-home/auth-home.component.ts","webpack:///./src/app/authentication/authentication.module.ts","webpack:///./src/app/authentication/authentication.routing.module.ts","webpack:///./src/app/authentication/forgot-password/forgot-password.component.html","webpack:///./src/app/authentication/forgot-password/forgot-password.component.scss","webpack:///./src/app/authentication/forgot-password/forgot-password.component.ts","webpack:///./src/app/authentication/login/login.component.html","webpack:///./src/app/authentication/login/login.component.scss","webpack:///./src/app/authentication/login/login.component.ts","webpack:///./src/app/authentication/new-password/new-password.component.html","webpack:///./src/app/authentication/new-password/new-password.component.scss","webpack:///./src/app/authentication/new-password/new-password.component.ts","webpack:///./src/app/authentication/services/auth.service.ts","webpack:///./src/app/authentication/services/otp.service.ts","webpack:///./src/app/authentication/sign-up/control.service.ts","webpack:///./src/app/authentication/sign-up/sign-up.component.html","webpack:///./src/app/authentication/sign-up/sign-up.component.scss","webpack:///./src/app/authentication/sign-up/sign-up.component.ts","webpack:///./src/app/authentication/validators/custom.validaors.ts","webpack:///./src/app/authentication/verify-otp/verify-otp.component.html","webpack:///./src/app/authentication/verify-otp/verify-otp.component.scss","webpack:///./src/app/authentication/verify-otp/verify-otp.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AAC4B;AACf;AACkG;;AAEjJ;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC;AACA;AACA;AACA,yBAAyB,0DAAY;AACrC;AACA;AACA;AACA,yBAAyB,0DAAY;AACrC;AACA;AACA;AACA,yBAAyB,0DAAY;AACrC;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,yCAAyC,wDAAS;AAClD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO,mDAAK,EAAE;AACjC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,mDAAK,EAAE;AAC5B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,mBAAmB,OAAO,oDAAM,EAAE;AAClC,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,iBAAiB,OAAO,oDAAM,EAAE;AAChC,iBAAiB,OAAO,oDAAM,EAAE;AAChC,iBAAiB,OAAO,oDAAM,EAAE;AAChC,kBAAkB,OAAO,oDAAM,EAAE;AACjC,8BAA8B,OAAO,uDAAS,iCAAiC;AAC/E,6BAA6B,OAAO,uDAAS,gCAAgC;AAC7E;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gEAAgE,EAAE;AAClE,oBAAoB;AACpB;AACA,qBAAqB,2EAA2E,EAAE;AAClG;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,gDAAgD;AAChD,SAAS,OAAO,oDAAM;AACtB,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,oDAAoD,EAAE;AAC3E;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,iCAAiC;AACjC,wBAAwB;AACxB;AACA,yBAAyB,uCAAuC,EAAE,GAAG,EAAE;AACvE;AACA,wBAAwB;AACxB;AACA,yBAAyB;AACzB,wBAAwB;AACxB;AACA,yBAAyB,qCAAqC,EAAE,GAAG,EAAE;AACrE;AACA,wBAAwB;AACxB;AACA,yBAAyB;AACzB,wBAAwB;AACxB;AACA,yBAAyB,oCAAoC,EAAE,GAAG,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA,qCAAqC,gEAAiB;AACtD,yCAAyC,gEAAU;AACnD,wCAAwC;AACxC;AACA,yCAAyC,oCAAoC,EAAE;AAC/E;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,8DAA8D;AAC9D,SAAS,OAAO,uDAAS,EAAE;AAC3B,SAAS,OAAO,oDAAM,EAAE;AACxB,SAAS,OAAO,sDAAQ,EAAE;AAC1B,SAAS;AACT,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,cAAc,OAAO,mDAAK,EAAE;AAC5B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,iCAAiC;AACjC,wBAAwB;AACxB;AACA,yBAAyB,uCAAuC,EAAE,GAAG,EAAE;AACvE;AACA,wBAAwB;AACxB;AACA,yBAAyB;AACzB,wBAAwB;AACxB;AACA,yBAAyB,qCAAqC,EAAE,GAAG,EAAE;AACrE;AACA,wBAAwB;AACxB;AACA,yBAAyB;AACzB,wBAAwB;AACxB;AACA,yBAAyB,oCAAoC,EAAE,GAAG,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA,qCAAqC,gEAAiB;AACtD,yCAAyC,gEAAU;AACnD,wCAAwC;AACxC;AACA,yCAAyC,4BAA4B,EAAE;AACvE;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,sDAAsD;AACtD,SAAS,OAAO,uDAAS,EAAE;AAC3B,SAAS,OAAO,oDAAM,EAAE;AACxB,SAAS,OAAO,sDAAQ,EAAE;AAC1B,SAAS;AACT,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,mDAAK,EAAE;AAC5B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,gCAAgC;AAChC;AACA,iCAAiC,wBAAwB,EAAE;AAC3D,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,qDAAqD;AACrD,SAAS,sBAAsB;AAC/B,SAAS,OAAO,oDAAM;AACtB,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA,wBAAwB,4DAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEwJ;;AAExJ,uC;;;;;;;;;;;ACliCA,mB;;;;;;;;;;;ACAA,+DAA+D,2K;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,8HAAyC;;SAE1C,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPW;AACM;AACU;AACK;AACM;AACU;AAC3B;AACQ;AAEQ;AACmB;AACT;AACvB;AACiB;AACnB;AAQpD;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QANhC,8DAAQ,CAAC;YACN,YAAY,EAAE,CAAC,qEAAc,EAAE,0EAAe,EAAE,gFAAiB,EAAE,mGAAuB,EAAE,0FAAoB,EAAE,oFAAkB,CAAC;YACrI,OAAO,EAAE,CAAE,4DAAY,EAAE,kEAAmB,EAAE,0FAA2B,EAAC,4DAAgB,CAAC;YAC3F,OAAO,EAAE,EAAE;YACX,SAAS,EAAE,CAAC,uEAAc,EAAE,mEAAW,EAAE,iEAAU,CAAC;SACvD,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACtBQ;AACc;AACR;AACU;AACK;AACwB;AACT;AAE7E,2BAA2B;AAC3B,IAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;IAC5C,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,0EAAe,EAAC;IAC5C,EAAC,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,kGAAuB,EAAC;IAC3D,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,yFAAoB,EAAC;IACtD,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAC;IAClD,EAAE,IAAI,EAAE,IAAI,EAAI,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAC;CAC1D,CAAC;AACF,kCAAkC;AAMlC;IAAA;IAA0C,CAAC;IAA9B,2BAA2B;QAJvC,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,EAAE,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACtD,OAAO,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,2BAA2B,CAAG;IAAD,kCAAC;CAAA;AAAH;;;;;;;;;;;;ACvBxC,iiCAAiiC,ycAAyc,87C;;;;;;;;;;;ACA1+C,4BAA4B,wBAAwB,oCAAoC,iCAAiC,2BAA2B,kEAAkE,2BAA2B,2BAA2B,EAAE,cAAc,oCAAoC,mBAAmB,oBAAoB,EAAE,eAAe,mCAAmC,mBAAmB,oBAAoB,EAAE,yBAAyB,oBAAoB,qBAAqB,gBAAgB,gBAAgB,uBAAuB,mBAAmB,oBAAoB,EAAE,yBAAyB,8BAA8B,qBAAqB,qBAAqB,mBAAmB,uBAAuB,6BAA6B,sBAAsB,iBAAiB,oBAAoB,gBAAgB,EAAE,kBAAkB,gBAAgB,wBAAwB,EAAE,WAAW,2BAA2B,EAAE,+CAA+C,+2E;;;;;;;;;;;;;;;;;;;;;;;ACA57B;AACkB;AAC3B;AACc;AACS;AACI;AACC;AAOrE;IAUE,iCAAoB,WAAwB,EAAU,MAAc,EAAU,WAAwB,EAC5F,aAA4B;QADlB,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAC5F,kBAAa,GAAb,aAAa,CAAe;QAT9B,mBAAc,GAAG,IAAI,4CAAO,EAAU,CAAC;QACvC,sBAAiB,GAAQ,IAAI,MAAM,CAAC,cAAc,CAAC,CAAC;QACpD,eAAU,GAAQ,IAAI,MAAM,CAAC,wEAAwE,CAAC,CAAC;QAExG,qBAAgB,GAA6B,IAAI,oDAAe,CAAC,KAAK,CAAC,CAAC;QAGxE,gBAAW,GAAC,KAAK,CAAC;IAEiB,CAAC;IAE3C,0CAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,yBAAyB,EAAE,CAAC;IAEnC,CAAC;IACM,0CAAQ,GAAf;QACE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC/C,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACvC,CAAC,CAAC;IACL,CAAC;IACD,wCAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,eAAe,GAAG,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAC9G,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAE/B,CAAC;IAEM,2CAAS,GAAhB;QACE,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAC5B,CAAC;IAEM,uDAAqB,GAA5B;QACE,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAClC;aAAM;YACL,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAClC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;SAC5C;IAEH,CAAC;IAED,6DAA6D;IACtD,+DAA6B,GAApC,UAAqC,KAAa;QAChD,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpD,IAAI,QAAQ,EAAE;YACZ,sBAAsB;YACtB,MAAM,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;SACvB;aAAM;YACL,qBAAqB;YACrB,MAAM,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE;SACtB;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IACD,8CAA8C;IAKvC,8DAA4B,GAAnC,UAAoC,KAAa;QAE/C,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpD,IAAI,QAAQ,EAAE;YACZ,MAAM,GAAG,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC;SAClC;aAAM;YACL,MAAM,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;SAC1B;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAEM,mDAAiB,GAAxB;QAAA,iBAqBC;QApBC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,mEAAY,CAAC,GAAG,CAAC,EAAE,2EAAoB,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,UAAU;YAC9H,IAAI,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;gBAC3C,IAAM,SAAS,GAAG,KAAI,CAAC,6BAA6B,CAAC,UAAU,CAAC,CAAC;gBACjE,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACpC,KAAI,CAAC,sBAAsB,GAAG,IAAI,4CAAO,EAAE,CAAC;gBAC5C,KAAI,CAAC,kCAAkC,EAAE,CAAC;gBAC1C,2EAA2E;aAC5E;iBAAM,IAAI,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;gBAC3C,uBAAuB;gBACvB,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,uBAAuB,EAAE,OAAO,CAAC,CAAC;gBAC/D,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;gBAClF,oEAAoE;gBACpE,uCAAuC;gBACvC,4BAA4B;aAC7B;iBACI;gBACH,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBACzB,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;aACnF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAGM,oDAAkB,GAAzB;QAAA,iBAOC;QANC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,mEAAY,CAAC,GAAG,CAAC,EACxC,2EAAoB,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,YAAoB;YACrD,IAAI,YAAY,EAAE;gBAChB,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;aAChC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,6CAAW,GAAlB,UAAmB,YAAoB;QAAvC,iBAsBC;QArBC,uDAAuD;QACvD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACvH,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gBAC7B,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;aACxF;QACH,CAAC,EACC,aAAG;YACD,MAAM;YACN,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,GAAG,CAAC,SAAS,IAAI,+BAA+B,EAAE;gBACpD,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;gBACvF,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;aACtD;iBAAM;gBACL,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBAC9D,KAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACxC;QAEH,CAAC,CAAC,CAAC;QACL,OAAO,+CAAE,CAAC,EAAE,CAAC,CAAC;IAChB,CAAC;IAGM,oEAAkC,GAAzC;QAAA,iBAQC;QAPC,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,UAAC,WAAW;YAChD,IAAI,WAAW,EAAE;gBACf,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,KAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC/D,KAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;aAC3C;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,2DAAyB,GAAhC;QAAA,iBAYC;QAXC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxB,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,UAAC,IAAI;YACnC,IAAI,CAAC,IAAI,EAAE;gBACT,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAC7B,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gBAC7B,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC;aACpF;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;gBAC9B,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aAC/D;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAGM,iDAAe,GAAtB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;IAEM,kDAAgB,GAAvB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;IAGD,qDAAmB,GAAnB,UAAoB,KAAK;QACvB,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAC,KAAK,CAAC,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;QACpC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IA3KU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,gJAA+C;;SAEhD,CAAC;+EAWiC,0DAAW,EAAkB,sDAAM,EAAuB,kEAAW;YAC7E,kFAAa;OAX3B,uBAAuB,CA4KnC;IAAD,8BAAC;CAAA;AA5KmC;;;;;;;;;;;;ACbpC,m5BAAm5B,6UAA6U,wnBAAwnB,y6B;;;;;;;;;;;ACAx1D,4BAA4B,wBAAwB,oCAAoC,iCAAiC,2BAA2B,kEAAkE,2BAA2B,2BAA2B,EAAE,iBAAiB,gCAAgC,kBAAkB,2BAA2B,uBAAuB,2BAA2B,EAAE,eAAe,oBAAoB,gBAAgB,qBAAqB,EAAE,cAAc,uBAAuB,wBAAwB,EAAE,yBAAyB,oBAAoB,qBAAqB,gBAAgB,gBAAgB,uBAAuB,mBAAmB,oBAAoB,EAAE,yBAAyB,8BAA8B,qBAAqB,qBAAqB,mBAAmB,uBAAuB,6BAA6B,sBAAsB,iBAAiB,oBAAoB,gBAAgB,EAAE,kBAAkB,gBAAgB,wBAAwB,EAAE,uDAAuD,yCAAyC,EAAE,+CAA+C,2nF;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3lC;AAC+B;AACxC;AAEc;AACc;AAEtB;AACgC;AACV;AACoB;AACvB;AACyB;AAS3F;IAQE,wBAAoB,WAAwB,EAAU,MAAc,EAC1D,WAAwB,EAAU,aAA4B,EAC9D,aAA4B,EAAU,OAAuB,EAC5D,cAA8B,EAAS,eAA+B;QAH7D,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAC1D,gBAAW,GAAX,WAAW,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;QAC9D,kBAAa,GAAb,aAAa,CAAe;QAAU,YAAO,GAAP,OAAO,CAAgB;QAC5D,mBAAc,GAAd,cAAc,CAAgB;QAAS,oBAAe,GAAf,eAAe,CAAgB;QARzE,mBAAc,GAAG,IAAI,4CAAO,EAAU,CAAC;QACvC,eAAU,GAAW,EAAE,CAAC;QACxB,sBAAiB,GAAQ,IAAI,MAAM,CAAC,cAAc,CAAC,CAAC;QACpD,eAAU,GAAQ,IAAI,MAAM,CAAC,2JAA2J,CAAC,CAAC;IAK7G,CAAC;IAEtF,iCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAEM,iCAAQ,GAAf;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,SAAS,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,gFAAW,CAAC,YAAY,CAAC,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjG,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,+BAAM,GAAN;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACnC,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,yCAAyC;IAClC,yCAAgB,GAAvB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,kDAAkD;IAC3C,iDAAwB,GAA/B;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;IAC/C,CAAC;IAED,oDAAoD;IAC7C,mCAAU,GAAjB;QACE,wFAAwF;IAC1F,CAAC;IACD,2DAA2D;IAEpD,sCAAa,GAApB;QACE,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;QAChC,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACnE,MAAM,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC;QACpD,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,UAAS,QAAQ;YAC/C,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,IAAI,QAAQ,CAAC,MAAM,EAAE;gBACnB,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,4BAA4B,EAAC,SAAS,CAAC,CAAC;gBACrE,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;gBACxC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;gBAC5B,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;aACjC;iBAAM;gBACL,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,eAAe,EAAC,OAAO,CAAC,CAAC;aACvD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,iCAAiC;IACjC,qCAAqC;IACrC,qBAAqB;IACrB,wEAAwE;IACxE,yDAAyD;IACzD,qBAAqB;IAGrB,+CAA+C;IAC/C,gBAAgB;IAChB,kBAAkB;IAClB,2CAA2C;IAC3C,6BAA6B;IAC7B,kFAAkF;IAClF,6CAA6C;IAC7C,qCAAqC;IACrC,6CAA6C;IAC7C,mBAAmB;IACnB,6DAA6D;IAC7D,YAAY;IACZ,UAAU;IACV,mBAAmB;IACnB,yCAAyC;IACzC,0DAA0D;IAC1D,QAAQ;IACR,OAAO;IACP,IAAI;IAEJ,qCAAY,GAAZ,UAAa,QAAQ;QACnB,IAAI,SAAS,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC;QACrC,SAAS,CAAC,YAAY,CAAC,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC;QAC7C,SAAS,CAAC,QAAQ,CAAC,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC;QACxD,SAAS,CAAC,gFAAW,CAAC,aAAa,CAAC,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC,gFAAW,CAAC,aAAa,CAAC,CAAC;QAC3F,SAAS,CAAC,gFAAW,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC,gFAAW,CAAC,IAAI,CAAC;QACxE,SAAS,CAAC,gFAAW,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC,gFAAW,CAAC,OAAO,CAAC;QAC9E,SAAS,CAAC,gFAAW,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC,gFAAW,CAAC,OAAO,CAAC;QAC9E,SAAS,CAAC,gFAAW,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC,gFAAW,CAAC,SAAS,CAAC;QAClF,SAAS,CAAC,gFAAW,CAAC,iBAAiB,CAAC,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC,gFAAW,CAAC,iBAAiB,CAAC;QAClG,SAAS,CAAC,gFAAW,CAAC,WAAW,CAAC,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC,gFAAW,CAAC,WAAW,CAAC;QACtF,SAAS,CAAC,gFAAW,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC,gFAAW,CAAC,KAAK,CAAC;QAE1E,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;IACzC,CAAC;IAEO,sCAAa,GAArB;QAAA,iBAKC;QAJC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,UAAC,MAAM;YAChD,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,CAAC;QAC3B,CAAC,CAAC;IACJ,CAAC;IAEM,2CAAkB,GAAzB;QAAA,iBAIC;QAHC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,2EAAoB,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,YAAoB;YAC9E,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,oCAAW,GAAlB,UAAmB,YAAoB;QAAvC,iBAQC;QAPC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACvH,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;aAChF;QACH,CAAC,EACC,aAAG,IAAM,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrE,OAAO,+CAAE,CAAC,EAAE,CAAC,CAAC;IAChB,CAAC;IAED,uBAAuB;IAChB,0CAAiB,GAAxB;QAAA,iBAWC;QATC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,mEAAY,CAAC,GAAG,CAAC,EAAE,2EAAoB,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,UAAU;YACtH,IAAI,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;gBAC/E,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACtD,IAAM,SAAS,GAAG,KAAI,CAAC,6BAA6B,CAAC,UAAU,CAAC,CAAC;gBACjE,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aACrC;iBAAM;gBACL,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;aAC3E;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,8BAA8B;IAE9B,6DAA6D;IACtD,sDAA6B,GAApC,UAAqC,KAAa;QAChD,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpD,IAAI,QAAQ,EAAE;YACZ,sBAAsB;YACtB,MAAM,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;SACzB;aAAM;YACL,qBAAqB;YACrB,MAAM,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;SACzB;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IACD,8CAA8C;IAG9C,6DAA6D;IACtD,4CAAmB,GAA1B,UAA2B,KAAa;QACtC,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpD,IAAI,QAAQ,EAAE;YACZ,sBAAsB;YACtB,MAAM,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;SAC7D;aAAM;YACL,qBAAqB;YACrB,MAAM,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;SAC5D;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IACD,8CAA8C;IAGvC,4CAAmB,GAA1B;QACE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACtB,CAAC;IAEM,yCAAgB,GAAvB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;IA/LU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,kHAAqC;;SAEtC,CAAC;+EASiC,0DAAW,EAAkB,sDAAM;YAC7C,kEAAW,EAAyB,kFAAa;YAC/C,kFAAa,EAAmB,sGAAc;YAC5C,sGAAc,EAAyB,yGAAe;OAXtE,cAAc,CAiM1B;IAAD,qBAAC;CAAA;AAjM0B;;;;;;;;;;;;ACrB3B,ijCAAijC,wVAAwV,6pBAA6pB,0wBAA0wB,2M;;;;;;;;;;;ACAhzF,4BAA4B,wBAAwB,oCAAoC,iCAAiC,2BAA2B,kEAAkE,2BAA2B,2BAA2B,EAAE,cAAc,oCAAoC,mBAAmB,oBAAoB,EAAE,eAAe,mCAAmC,mBAAmB,oBAAoB,EAAE,yBAAyB,oBAAoB,qBAAqB,gBAAgB,gBAAgB,uBAAuB,mBAAmB,oBAAoB,EAAE,yBAAyB,8BAA8B,qBAAqB,qBAAqB,mBAAmB,uBAAuB,6BAA6B,sBAAsB,iBAAiB,oBAAoB,gBAAgB,EAAE,kBAAkB,gBAAgB,wBAAwB,EAAE,+CAA+C,uwE;;;;;;;;;;;;;;;;;;;;;;;;ACAp5B;AACkB;AAC3B;AACc;AACW;AACG;AACA;AACoB;AAOzF;IAGE,8BAAoB,WAAwB,EAAU,MAAc,EAC1D,WAAwB,EAAU,aAA4B,EAC9D,aAA4B,EAAU,cAA8B;QAF1D,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAC1D,gBAAW,GAAX,WAAW,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;QAC9D,kBAAa,GAAb,aAAa,CAAe;QAAU,mBAAc,GAAd,cAAc,CAAgB;IAAI,CAAC;IAEnF,uCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IACM,uCAAQ,GAAf;QACE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC5C,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,wDAAwD,CAAC,CAAC,CAAC;YACnH,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAC7C,EAAE,EAAE,UAAU,EAAE,6EAAgB,CAAC,eAAe,EAAE,CAAC,CAAC;IACvD,CAAC;IACD,qCAAM,GAAN;QAAA,iBAkBC;QAjBC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;QAChC,QAAQ;QACR,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACjF,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;gBAChC,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,6BAA6B,EAAE,SAAS,CAAC,CAAC;gBACvE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;aACtC;QACH,CAAC,EAAE,aAAG;YACJ,MAAM;YACN,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,GAAG,EAAC,sBAAsB,CAAC,CAAC;YAEzD,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,KAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;QAElC,CAAC,CAAC,CAAC;IAEL,CAAC;IAEM,+CAAgB,GAAvB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACxC,CAAC;IAEM,+CAAgB,GAAvB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;IA1CU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,uIAA4C;;SAE7C,CAAC;+EAIiC,0DAAW,EAAkB,sDAAM;YAC7C,kEAAW,EAAyB,kFAAa;YAC/C,kFAAa,EAA0B,sGAAc;OALnE,oBAAoB,CA2ChC;IAAD,2BAAC;CAAA;AA3CgC;;;;;;;;;;;;;;;;;;;;;;;ACdU;AACgD;AAK1B;AACJ;AACX;AAElD;IAGI,qBAAoB,eAAgC,EAAU,IAAgB;QAA1D,oBAAe,GAAf,eAAe,CAAiB;QAAU,SAAI,GAAJ,IAAI,CAAY;QADxE,oBAAe,GAAW,EAAE,CAAC;IAC8C,CAAC;IAElF,gCAAgC;IACvB,4BAAM,GAAb,UAAc,YAAqB;QACjC,IAAM,IAAI,GAAG,EAAC,WAAW,EAAE,CAAC,YAAY,CAAC,EAAC,CAAC;QAC3C,IAAM,MAAM,GAAG;YACX,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC;gBAC7B,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QACJ,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACzD,CAAC;IAEH,uCAAuC;IAGvC,uBAAuB;IAChB,4BAAM,GAAb,UAAc,YAAY,EAAE,QAAQ;QAClC,IAAM,IAAI,GAAG,EAAC,WAAW,EAAE,CAAC,YAAY,CAAC,EAAC,CAAC;QAC3C,IAAM,MAAM,GAAG;YACX,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC;gBAC7B,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QAEJ,0DAAyB,CAAC,sDAAW,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QAC/D,0DAA0D;IAC5D,CAAC;IAGD,8BAA8B;IAE/B,8CAA8C;IACvC,oCAAc,GAArB,UAAsB,KAAa,EAAE,IAAY;QAEhD,IAAM,IAAI,GAAG,EAAC,sBAAsB,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC;QAC5C,IAAM,MAAM,GAAG;YACX,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC;gBAC7B,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE,KAAK;aACb,CAAC;SACH,CAAC;QACJ,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC1B,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACxD,CAAC;IAEF,2BAA2B;IACpB,mCAAa,GAApB,UAAqB,QAAa;QAChC,IAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC;QACtC,QAAQ,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAM,IAAI,GAAG,EAAC,oBAAoB,EAAE,CAAC,QAAQ,CAAC,EAAC,CAAC;QAChD,IAAM,MAAM,GAAG;YACX,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC;gBAC7B,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QACJ,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACzD,CAAC;IACA,kCAAkC;IAG3B,mCAAa,GAApB;QACC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;IAChE,CAAC;IApES,WAAW;QADvB,gEAAU,EAAE;+EAI4B,wGAAe,EAAgB,+DAAU;OAHrE,WAAW,CAqEvB;IAAD,kBAAC;CAAA;AArEuB;;;;;;;;;;;;;;;;;;;;;ACVmB;AACgD;AAElC;AACgC;AAGzF;IAEI,oBAAoB,eAAgC,EAAU,cAA8B;QAAxE,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;IAAG,CAAC;IAEzF,gCAAW,GAAlB,UAAmB,YAAoB;QACnC,IAAM,OAAO,GAAG;YACd,MAAM,EAAE,CAAC;oBACP,WAAW,EAAE,OAAO;oBACpB,SAAS,EAAE,KAAK;oBAChB,KAAK,EAAE,qEAAe,CAAC,QAAQ,CAAC,OAAO,CAAC;oBACxC,KAAK,EAAE,qEAAe,CAAC,QAAQ,CAAC,OAAO,CAAC;oBACxC,SAAS,EAAG,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE;oBACpD,MAAM,EAAE,YAAY;iBACrB,CAAC;SACH,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,IAAM,SAAS,GAAG;YAChB,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC;gBAC7B,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QACF,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IAC9D,CAAC;IAGD,8CAA8C;IAC1C,8BAAS,GAAhB,UAAiB,UAAkB,EAAC,KAAa;QAC7C,IAAM,OAAO,GAAG;YACZ,SAAS,EAAE,CAAC;oBACV,WAAW,EAAE,OAAO;oBACpB,SAAS,EAAE,KAAK;oBAChB,SAAS,EAAG,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE;oBACpD,KAAK,EAAE,qEAAe,CAAC,QAAQ,CAAC,OAAO,CAAC;oBACxC,KAAK,EAAE,qEAAe,CAAC,QAAQ,CAAC,OAAO,CAAC;oBACxC,GAAG,EAAE,UAAU;iBAChB,CAAC;SACH,CAAC;QACJ,IAAM,SAAS,GAAG;YACd,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC;gBAC7B,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QACJ,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IACjE,CAAC;IA3CQ,UAAU;QADtB,gEAAU,EAAE;+EAG4B,wGAAe,EAA0B,sGAAc;OAFnF,UAAU,CA6CtB;IAAD,iBAAC;CAAA;AA7CsB;;;;;;;;;;;;;;;;;;;;;;ACPoB;AACO;AACkB;AAExB;AACO;AAGnD;IAMI,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAElC,uCAAc,GAArB,UAAsB,OAAiB;QACrC,OAAO,IAAI,0DAAW,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;IAC1D,CAAC;IAEM,sCAAa,GAApB,UAAqB,OAAiB;QACpC,IAAM,eAAe,GAAG,EAAE,CAAC;QAC3B,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE;YAC7B,eAAe,CAAC,IAAI,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAC3C;QACD,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACzB,eAAe,CAAC,IAAI,CAAC,yDAAU,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;SACzD;QACD,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE;YAC7B,eAAe,CAAC,IAAI,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;SAChE;QACD,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE;YAC7B,eAAe,CAAC,IAAI,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;SAChE;QACD,OAAO,eAAe,CAAC;IACzB,CAAC;IAED,kDAAkD;IAC3C,oCAAW,GAAlB,UAAmB,QAAkB;QACnC,IAAI,QAAQ,CAAC,WAAW,EAAE;YACxB,OAAO,QAAQ,CAAC,WAAW,CAAC;SAC7B;aAAM;YAAE,OAAO,KAAK,CAAC;SAAE;IAC1B,CAAC;IACD,kDAAkD;IAElD,iDAAiD;IAC1C,gCAAO,GAAd,UAAe,OAAiB;QAC9B,oFAAoF;QACpF,OAAO,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QACjD,gGAAgG;IAClG,CAAC;IACD,iDAAiD;IAEjD,uCAAuC;IAChC,oCAAW,GAAlB,UAAmB,OAAiB;QAClC,OAAO,OAAO,CAAC,SAAS,KAAK,EAAE,IAAI,OAAO,CAAC,SAAS,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC9F,CAAC;IACD,uCAAuC;IAEvC,uCAAuC;IAChC,oCAAW,GAAlB,UAAmB,OAAiB;QAClC,OAAO,OAAO,CAAC,SAAS,KAAK,EAAE,IAAI,OAAO,CAAC,SAAS,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC9F,CAAC;IACD,+CAA+C;IAGxC,uCAAc,GAArB;QAAA,iBAUC;QATG,IAAI,CAAC,UAAU,GAAG,IAAI,oDAAe,CAAQ,IAAI,CAAC,CAAC;QAEnD,IAAM,SAAS,GAAI,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QAExC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gCAA8B,SAAW,CAAC,CAAC,IAAI,CAAC,4DAAK,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YAC1F,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAEM,oCAAW,GAAlB;QACE,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAxEQ,cAAc;QAD1B,gEAAU,EAAE;+EAOiB,+DAAU;OAN3B,cAAc,CA0E1B;IAAD,qBAAC;CAAA;AA1E0B;;;;;;;;;;;;ACR3B,40BAA40B,eAAe,uDAAuD,2CAA2C,0LAA0L,0HAA0H,eAAe,wBAAwB,mBAAmB,oFAAoF,qKAAqK,eAAe,kFAAkF,sKAAsK,mBAAmB,4BAA4B,eAAe,qEAAqE,2SAA2S,giBAAgiB,+rB;;;;;;;;;;;ACAzvF,4BAA4B,iBAAiB,oCAAoC,iCAAiC,2BAA2B,kEAAkE,2BAA2B,2BAA2B,EAAE,iBAAiB,gCAAgC,kBAAkB,2BAA2B,uBAAuB,2BAA2B,EAAE,eAAe,oBAAoB,gBAAgB,qBAAqB,EAAE,cAAc,uBAAuB,wBAAwB,EAAE,yBAAyB,oBAAoB,qBAAqB,gBAAgB,gBAAgB,uBAAuB,qBAAqB,mBAAmB,mCAAmC,EAAE,yBAAyB,8BAA8B,qBAAqB,qBAAqB,mBAAmB,uBAAuB,6BAA6B,sBAAsB,iBAAiB,oBAAoB,gBAAgB,EAAE,kBAAkB,gBAAgB,wBAAwB,gCAAgC,qCAAqC,EAAE,+CAA+C,umF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3lC;AAM1B;AAC2B;AAMa;AACf;AACM;AAGc;AAC+B;AAC/B;AAC5B;AACyB;AACuB;AACvB;AASlE;IASE,yBACU,WAAwB,EACzB,cAA8B,EAC7B,kBAAsC,EACtC,WAAwB,EACxB,aAA4B,EAC5B,aAA4B,EAC5B,MAAc,EACd,cAA8B;QAP9B,gBAAW,GAAX,WAAW,CAAa;QACzB,mBAAc,GAAd,cAAc,CAAgB;QAC7B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAfjC,kBAAa,GAAG,IAAI,oDAAe,CAAc,IAAI,CAAC,CAAC;QAEtD,mBAAc,GAAG,IAAI,4CAAO,EAAU,CAAC;QAGxC,UAAK,GAAG,IAAI,4CAAO,EAAiB,CAAC;QAY1C,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,EAAE,CAAC;IAExB,CAAC;IAEO,sCAAY,GAApB;QACE,IAAI,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE;YAChC,uGAAuG;YACvG,gDAAgD;YAChD,OAAO;YACP,6BAA6B;YAC7B,MAAM;SACP;IACH,CAAC;IAEM,uCAAa,GAApB,UAAqB,KAAK;QACxB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC;IACM,+BAAK,GAAZ,UAAa,KAAK;QAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC/B,CAAC;IAEO,oCAAU,GAAlB;QACE,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,IAAI,CAAC,UAAU,CAAC,UAAU,CACxB,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,EACxB,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAC/C,CAAC;SACH;QACD,8BAA8B;QAC9B,sBAAsB;QACtB,2EAA2E;QAC3E,KAAK;QACL,IAAI,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE;YAChC,wFAAwF;SACzF;QACD,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,8EAAgB,CAAC,eAAe,CAAC,CAAC;IAClE,CAAC;IAEM,qCAAW,GAAlB;QACE,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;IAC3C,CAAC;IAED,kCAAQ,GAAR;QAEE,UAAU,CAAC;YACT,CAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;gBAChB,CAAC,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,CAAC;YAC7B,CAAC,CAAC,CAAC;QAEL,CAAC,EAAE,GAAG,CAAC;QAGP,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAC7C,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAEM,sCAAY,GAAnB,cAAwB,CAAC;IAEzB,mDAAmD;IAC5C,gCAAM,GAAb;QAAA,iBAyBC;QAvBC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAgB,CAAC,CAAC;QAE9C,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;QAChC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAgB,CAAC,CAAC,SAAS,CACjE,UAAC,IAAe;YACd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;gBAChC,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,yBAAyB,EAAE,SAAS,CAAC,CAAC;gBACnE,IAAI,KAAK,GAAG,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC;gBACxC,KAAI,CAAC,cAAc,CAAC,eAAe,CAAC,gFAAW,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;gBACrE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;aACtC;QACH,CAAC,EACD,aAAG;YACD,MAAM;YACN,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC;YACjD,KAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEjC,CAAC,CACF,CAAC;IACJ,CAAC;IAED,0DAA0D;IAEnD,4CAAkB,GAAzB;QAAA,iBASC;QARC,IAAI,CAAC,cAAc;aAChB,IAAI,CACH,mEAAY,CAAC,GAAG,CAAC,EACjB,2EAAoB,EAAE,CACvB;aACA,SAAS,CAAC,oBAAU;YACnB,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mDAAmD;IAC5C,wCAAc,GAArB,UAAsB,KAAK;QAA3B,iBAmBC;QAlBC,IAAI,CAAC,WAAW;aACb,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;aACrD,SAAS,CACR,cAAI;YACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,EACD,aAAG;YACD,MAAM;YACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,GAAG,EAAE,wBAAwB,CAAC,CAAC;YAC5D,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,OAAO,CAAC;YACrC,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;gBACxD,SAAS,EAAE,IAAI;aAChB,CAAC,CAAC;QACL,CAAC,CACF,CAAC;QACJ,OAAO,+CAAE,CAAC,EAAE,CAAC,CAAC;IAChB,CAAC;IAED,0EAA0E;IAC1E,sCAAY,GAAZ,UAAa,SAAiB,EAAE,OAAY;QAA5C,iBAYC;QAXC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,YAAY;aAC9C,IAAI,CACH,mEAAY,CAAC,GAAG,CAAC,EACjB,2EAAoB,EAAE,CACvB;aACA,SAAS,CAAC,eAAK;YACd,IAAI,OAAO,CAAC,YAAY,EAAE;gBACxB,KAAI,CAAC,aAAa,GAAG,OAAO,CAAC;gBAC7B,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACjC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,yCAAe,GAAtB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;IAEM,0CAAgB,GAAvB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,wBAAwB;IACjB,wCAAc,GAArB;QAAA,iBAgBC;QAfC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;QAChC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,SAAS,CAC5C,eAAK;YACH,IAAI,KAAK,EAAE;gBACT,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBAC1C,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC;gBAC9B,KAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,KAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,KAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;aACjC;QACH,CAAC,EACD,aAAG;YACD,KAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;QAClC,CAAC,CACF,CAAC;IACJ,CAAC;IAEM,wCAAc,GAArB;QAAA,iBAWC;QAVC,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,mEAAY,CAAC,GAAG,CAAC,EACjB,2EAAoB,EAAE,EACtB,8DAAO,CAAC,cAAI,IAAI,sDAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,4DAAK,CAAC,CAAC,CAAC,CAAC,EAAvB,CAAuB,CAAC,CACzC,CAAC,SAAS,CAAC,UAAC,IAAS;YACpB,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE;gBAChF,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC;gBAClC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACjC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAnMU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,wHAAuC;;SAExC,CAAC;+EAWuB,0DAAW;YACT,+DAAc;YACT,8DAAkB;YACzB,kEAAW;YACT,kFAAa;YACb,kFAAa;YACpB,uDAAM;YACE,uGAAc;OAjB7B,eAAe,CAsM3B;IAAD,sBAAC;CAAA;AAtM2B;;;;;;;;;;;;;AC/B5B;AAAA;AAAA;IAAA;IAkBA,CAAC;IAhBG,sBAAsB;IACf,gCAAe,GAAtB,UAAuB,KAAU;QAC7B,IAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACzC,IAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,eAAe,CAAC;QAC/C,IAAI,QAAQ,CAAC,QAAQ,IAAI,OAAO,CAAC,QAAQ,EAAE;YACxC,OAAO,IAAI,CAAC;SACd;QACD,KAAK,CAAC,aAAa,EAAE,CAAC;QACtB,IAAI,QAAQ,CAAC,KAAK,KAAK,OAAO,CAAC,KAAK,EAAE;YACnC,OAAO,IAAI,CAAC;SACd;QACD,OAAO;YACJ,eAAe,EAAE,IAAI;SACvB,CAAC;IACL,CAAC;IAEN,uBAAC;AAAD,CAAC;;;;;;;;;;;;;ACpBD,uFAAuF,2lBAA2lB,cAAc,gDAAgD,UAAU,wGAAwG,yIAAyI,4BAA4B,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,yDAAyD,iBAAiB,6E;;;;;;;;;;;ACAvxC,yBAAyB,2BAA2B,EAAE,wBAAwB,iBAAiB,gBAAgB,2BAA2B,uBAAuB,EAAE,oBAAoB,uBAAuB,eAAe,gBAAgB,eAAe,0BAA0B,EAAE,+CAA+C,25B;;;;;;;;;;;;;;;;;;;;;;;ACAjO;AAClC;AACf;AACgB;AAC5B;AACF;AACkD;AAQzF;IASE,4BAAoB,OAAmB,EAAU,UAAsB,EACnD,aAA4B,EAAU,MAAc,EACpD,cAA8B;QAF9B,YAAO,GAAP,OAAO,CAAY;QAAU,eAAU,GAAV,UAAU,CAAY;QACnD,kBAAa,GAAb,aAAa,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QACpD,mBAAc,GAAd,cAAc,CAAgB;QAP3C,sBAAiB,GAAkB,EAAE,CAAC;QACtC,cAAS,GAAG,CAAC,CAAC;QAOjB,IAAI,CAAC,SAAS,GAAG,IAAI,0DAAY,EAAE,CAAC;IACrC,CAAC;IAEJ,qCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAGD,yBAAyB;IAClB,wCAAW,GAAlB;QACE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;YACvC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,OAAO,GAAG,CAAC,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjF,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;SAC1C;IACH,CAAC;IAED,gCAAgC;IAGhC,oBAAoB;IACZ,yCAAY,GAApB,UAAqB,SAAiB,EAAE,KAAa;QACnD,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YACpB,OAAO;SACR;QACD,IAAM,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC/B,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;QACrE,IAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,GAAG,GAAG,SAAS,CAAC,CAAC;QAC9E,UAAU,CAAC;YACT,WAAW,CAAC,KAAK,EAAE,CAAC;QACtB,CAAC,EAAE,CAAC,CAAC,CAAC;IACR,CAAC;IAGM,qCAAQ,GAAf,UAAgB,SAAiB,EAAE,KAAa;QAC9C,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC,MAAM,KAAK,IAAI,CAAC,SAAS,EAAE;YAC/C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC5B;QACD,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;YAClD,OAAO;SACR;QACD,IAAM,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC/B,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;QACrE,IAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,GAAG,GAAG,SAAS,CAAC,CAAC;QAC9E,UAAU,CAAC;YACT,WAAW,CAAC,KAAK,EAAE,CAAC;QACtB,CAAC,EAAE,CAAC,CAAC,CAAC;IACR,CAAC;IAED,wCAAwC;IAGjC,uCAAU,GAAjB;QAAA,iBAQC;QAPC,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAM,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAC9D,OAAO,iBAAiB,CAAC,SAAS,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,UAAC,KAAK;YAC9C,GAAG,IAAI,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QACH,OAAO,GAAG,CAAC;IACb,CAAC;IAEM,iCAAI,GAAX,UAAY,KAAK,EAAE,SAAiB,EAAE,KAAa;QACjD,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,IAAI,KAAK,CAAC,OAAO,KAAK,CAAC,EAAE;YACrD,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;YACpC,OAAO;SACR;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;SACjC;IACH,CAAC;IAGM,wCAAW,GAAlB,UAAmB,cAA+B;QAAlD,iBAoBC;QApBkB,uDAA+B;QAChD,2BAA2B;QAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,QAAQ;YAC7E,IAAI,QAAQ,EAAE;gBACZ,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9C,IAAI,CAAC,cAAc,EAAE;oBAAE,KAAI,CAAC,WAAW,EAAE,CAAC;iBAAE;qBAAM;oBAAE,KAAI,CAAC,mBAAmB,EAAE,CAAC;iBAAE;gBACjF,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,SAAS,CAAC;gBACtC,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aAC1B;QACH,CAAC,EACC,eAAK;YACH,OAAO;YACP,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAEnB,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrC,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,EAAC,QAAQ,CAAC;YAC5C,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,mCAAmC;IAC3B,wCAAW,GAAnB;QAAA,iBAoBC;QAnBC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC,MAAM,KAAK,IAAI,CAAC,SAAS,EAAE;YAC/C,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,UAAC,QAAQ;gBAChF,IAAI,QAAQ,EAAE;oBACZ,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9C,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;oBAC1D,KAAI,CAAC,qBAAqB,EAAE,CAAC;iBAC9B;YACH,CAAC,EACC,eAAK;gBACH,OAAO;gBACP,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAEnB,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrC,qCAAqC;gBACrC,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,EAAC,WAAW,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;SACN;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;SAC3D;IACH,CAAC;IACD,0CAA0C;IAEnC,kDAAqB,GAA5B;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAC7C,CAAC;IAEM,iDAAoB,GAA3B;QAAA,iBAMC;QALC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,UAAC,IAAa;YAC5C,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,WAAW,EAAE,CAAC;aACpB;iBAAM;gBAAE,OAAO;aAAE;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAGM,wCAAW,GAAlB;QACE,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAEM,iDAAoB,GAA3B;QACE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;YACvC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;SAC3C;QACD,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;IAC9B,CAAC;IAEM,gDAAmB,GAA1B;QACE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;YACvC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;SAC9C;IACH,CAAC;IAEM,6CAAgB,GAAvB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;IAtKQ;QAAR,2DAAK,EAAE;wEAAY,wDAAS;yDAAC;IACrB;QAAR,2DAAK,EAAE;wEAAmB,oDAAe;gEAAU;IAC1C;QAAT,4DAAM,EAAE;wEAAY,0DAAY;yDAAU;IAHhC,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,iIAA0C;;SAE3C,CAAC;+EAU6B,wDAAU,EAAsB,gEAAU;YACpC,kFAAa,EAAkB,sDAAM;YACpC,sGAAc;OAXvC,kBAAkB,CA0K9B;IAAD,yBAAC;CAAA;AA1K8B","file":"authentication-authentication-module.js","sourcesContent":["import { __extends } from 'tslib';\nimport { NgControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { EventEmitter, Input, Output, ViewChild, Injectable, NgZone, Component, forwardRef, Injector, Renderer2, NgModule } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @abstract\r\n */\r\nvar BaseReCaptchaComponent = /** @class */ (function () {\r\n    function BaseReCaptchaComponent(renderer, zone, injector, scriptService) {\r\n        this.renderer = renderer;\r\n        this.zone = zone;\r\n        this.injector = injector;\r\n        this.scriptService = scriptService;\r\n        /**\r\n         * Prefix of the captcha element\r\n         */\r\n        this.captchaElemPrefix = 'ngx_captcha_id_';\r\n        /**\r\n         * Indicates if global domain 'recaptcha.net' should be used instead of default domain ('google.com')\r\n         */\r\n        this.useGlobalDomain = false;\r\n        /**\r\n         * Type\r\n         */\r\n        this.type = 'image';\r\n        /**\r\n         * Tab index\r\n         */\r\n        this.tabIndex = 0;\r\n        /**\r\n         * Called when captcha receives successful response.\r\n         * Captcha response token is passed to event.\r\n         */\r\n        this.success = new EventEmitter();\r\n        /**\r\n         * Called when captcha is loaded. Event receives id of the captcha\r\n         */\r\n        this.load = new EventEmitter();\r\n        /**\r\n         * Called when captcha is reset.\r\n         */\r\n        this.reset = new EventEmitter();\r\n        /**\r\n         * Called when captcha is loaded & ready. I.e. when you need to execute captcha on component load.\r\n         */\r\n        this.ready = new EventEmitter();\r\n        /**\r\n         * Error callback\r\n         */\r\n        this.error = new EventEmitter();\r\n        /**\r\n         * Expired callback\r\n         */\r\n        this.expire = new EventEmitter();\r\n        /**\r\n         * Indicates if captcha should be set on load\r\n         */\r\n        this.setupAfterLoad = false;\r\n        /**\r\n         * If enabled, captcha will reset after receiving success response. This is useful\r\n         * when invisible captcha need to be resolved multiple times on same page\r\n         */\r\n        this.resetCaptchaAfterSuccess = false;\r\n        /**\r\n         * Indicates if captcha is loaded\r\n         */\r\n        this.isLoaded = false;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    BaseReCaptchaComponent.prototype.ngAfterViewInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.control = this.injector.get(NgControl).control;\r\n    };\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    BaseReCaptchaComponent.prototype.ngOnChanges = /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function (changes) {\r\n        // cleanup scripts if language changed because they need to be reloaded\r\n        if (changes && changes.hl) {\r\n            // cleanup scripts when language changes\r\n            if (!changes.hl.firstChange && (changes.hl.currentValue !== changes.hl.previousValue)) {\r\n                this.scriptService.cleanup();\r\n            }\r\n        }\r\n        if (changes && changes.useGlobalDomain) {\r\n            // cleanup scripts when domain changes\r\n            if (!changes.useGlobalDomain.firstChange && (changes.useGlobalDomain.currentValue !== changes.useGlobalDomain.previousValue)) {\r\n                this.scriptService.cleanup();\r\n            }\r\n        }\r\n        this.setupComponent();\r\n    };\r\n    /**\r\n    * Gets captcha response as per reCaptcha docs\r\n    */\r\n    /**\r\n     * Gets captcha response as per reCaptcha docs\r\n     * @return {?}\r\n     */\r\n    BaseReCaptchaComponent.prototype.getResponse = /**\r\n     * Gets captcha response as per reCaptcha docs\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.reCaptchaApi.getResponse(this.captchaId);\r\n    };\r\n    /**\r\n    * Gets Id of captcha widget\r\n    */\r\n    /**\r\n     * Gets Id of captcha widget\r\n     * @return {?}\r\n     */\r\n    BaseReCaptchaComponent.prototype.getCaptchaId = /**\r\n     * Gets Id of captcha widget\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.captchaId;\r\n    };\r\n    /**\r\n    * Resets captcha\r\n    */\r\n    /**\r\n     * Resets captcha\r\n     * @return {?}\r\n     */\r\n    BaseReCaptchaComponent.prototype.resetCaptcha = /**\r\n     * Resets captcha\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.zone.run((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            // reset captcha using Google js api\r\n            _this.reCaptchaApi.reset();\r\n            // required due to forms\r\n            _this.onChange(undefined);\r\n            _this.onTouched(undefined);\r\n            // trigger reset event\r\n            _this.reset.next();\r\n        }));\r\n    };\r\n    /**\r\n    * Gets last submitted captcha response\r\n    */\r\n    /**\r\n     * Gets last submitted captcha response\r\n     * @return {?}\r\n     */\r\n    BaseReCaptchaComponent.prototype.getCurrentResponse = /**\r\n     * Gets last submitted captcha response\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.currentResponse;\r\n    };\r\n    /**\r\n    * Reload captcha. Useful when properties (i.e. theme) changed and captcha need to reflect them\r\n    */\r\n    /**\r\n     * Reload captcha. Useful when properties (i.e. theme) changed and captcha need to reflect them\r\n     * @return {?}\r\n     */\r\n    BaseReCaptchaComponent.prototype.reloadCaptcha = /**\r\n     * Reload captcha. Useful when properties (i.e. theme) changed and captcha need to reflect them\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.setupComponent();\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} captchaElemId\r\n     * @return {?}\r\n     */\r\n    BaseReCaptchaComponent.prototype.ensureCaptchaElem = /**\r\n     * @protected\r\n     * @param {?} captchaElemId\r\n     * @return {?}\r\n     */\r\n    function (captchaElemId) {\r\n        /** @type {?} */\r\n        var captchaElem = document.getElementById(captchaElemId);\r\n        if (!captchaElem) {\r\n            throw Error(\"Captcha element with id '\" + captchaElemId + \"' was not found\");\r\n        }\r\n        // assign captcha alem\r\n        this.captchaElem = captchaElem;\r\n    };\r\n    /**\r\n    * Responsible for instantiating captcha element\r\n    */\r\n    /**\r\n     * Responsible for instantiating captcha element\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    BaseReCaptchaComponent.prototype.renderReCaptcha = /**\r\n     * Responsible for instantiating captcha element\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        // run outside angular zone due to timeout issues when testing\r\n        // details: https://github.com/Enngage/ngx-captcha/issues/26\r\n        this.zone.runOutsideAngular((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.captchaId = _this.reCaptchaApi.render(_this.captchaElemId, _this.getCaptchaProperties());\r\n            _this.ready.next();\r\n        }));\r\n    };\r\n    /**\r\n    * Called when captcha receives response\r\n    * @param callback Callback\r\n    */\r\n    /**\r\n     * Called when captcha receives response\r\n     * @protected\r\n     * @param {?} callback Callback\r\n     * @return {?}\r\n     */\r\n    BaseReCaptchaComponent.prototype.handleCallback = /**\r\n     * Called when captcha receives response\r\n     * @protected\r\n     * @param {?} callback Callback\r\n     * @return {?}\r\n     */\r\n    function (callback) {\r\n        var _this = this;\r\n        this.currentResponse = callback;\r\n        this.success.next(callback);\r\n        this.zone.run((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.onChange(callback);\r\n            _this.onTouched(callback);\r\n        }));\r\n        if (this.resetCaptchaAfterSuccess) {\r\n            this.resetCaptcha();\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    BaseReCaptchaComponent.prototype.getPseudoUniqueNumber = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new Date().getUTCMilliseconds() + Math.floor(Math.random() * 9999);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    BaseReCaptchaComponent.prototype.setupComponent = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        // captcha specific setup\r\n        this.captchaSpecificSetup();\r\n        // create captcha wrapper\r\n        this.createAndSetCaptchaElem();\r\n        this.scriptService.registerCaptchaScript(this.useGlobalDomain, 'explicit', (/**\r\n         * @param {?} grecaptcha\r\n         * @return {?}\r\n         */\r\n        function (grecaptcha) {\r\n            _this.onloadCallback(grecaptcha);\r\n        }), this.hl);\r\n    };\r\n    /**\r\n    * Called when google's recaptcha script is ready\r\n    */\r\n    /**\r\n     * Called when google's recaptcha script is ready\r\n     * @private\r\n     * @param {?} grecapcha\r\n     * @return {?}\r\n     */\r\n    BaseReCaptchaComponent.prototype.onloadCallback = /**\r\n     * Called when google's recaptcha script is ready\r\n     * @private\r\n     * @param {?} grecapcha\r\n     * @return {?}\r\n     */\r\n    function (grecapcha) {\r\n        // assign reference to reCaptcha Api once its loaded\r\n        this.reCaptchaApi = grecapcha;\r\n        if (!this.reCaptchaApi) {\r\n            throw Error(\"ReCaptcha Api was not initialized correctly\");\r\n        }\r\n        // loaded flag\r\n        this.isLoaded = true;\r\n        // fire load event\r\n        this.load.next();\r\n        // render captcha\r\n        this.renderReCaptcha();\r\n        // setup component if it was flagged as such\r\n        if (this.setupAfterLoad) {\r\n            this.setupAfterLoad = false;\r\n            this.setupComponent();\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    BaseReCaptchaComponent.prototype.generateNewElemId = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.captchaElemPrefix + this.getPseudoUniqueNumber();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    BaseReCaptchaComponent.prototype.createAndSetCaptchaElem = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // generate new captcha id\r\n        this.captchaElemId = this.generateNewElemId();\r\n        if (!this.captchaElemId) {\r\n            throw Error(\"Captcha elem Id is not set\");\r\n        }\r\n        // remove old html\r\n        this.captchaWrapperElem.nativeElement.innerHTML = '';\r\n        // create new wrapper for captcha\r\n        /** @type {?} */\r\n        var newElem = this.renderer.createElement('div');\r\n        newElem.id = this.captchaElemId;\r\n        this.renderer.appendChild(this.captchaWrapperElem.nativeElement, newElem);\r\n        // update captcha elem\r\n        this.ensureCaptchaElem(this.captchaElemId);\r\n    };\r\n    /**\r\n     * To be aligned with the ControlValueAccessor interface we need to implement this method\r\n     * However as we don't want to update the recaptcha, this doesn't need to be implemented\r\n     */\r\n    /**\r\n     * To be aligned with the ControlValueAccessor interface we need to implement this method\r\n     * However as we don't want to update the recaptcha, this doesn't need to be implemented\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    BaseReCaptchaComponent.prototype.writeValue = /**\r\n     * To be aligned with the ControlValueAccessor interface we need to implement this method\r\n     * However as we don't want to update the recaptcha, this doesn't need to be implemented\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    function (obj) { };\r\n    /**\r\n     * This method helps us tie together recaptcha and our formControl values\r\n     */\r\n    /**\r\n     * This method helps us tie together recaptcha and our formControl values\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    BaseReCaptchaComponent.prototype.registerOnChange = /**\r\n     * This method helps us tie together recaptcha and our formControl values\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    function (fn) {\r\n        this.onChange = fn;\r\n    };\r\n    /**\r\n    * At some point we might be interested whether the user has touched our component\r\n    */\r\n    /**\r\n     * At some point we might be interested whether the user has touched our component\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    BaseReCaptchaComponent.prototype.registerOnTouched = /**\r\n     * At some point we might be interested whether the user has touched our component\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    function (fn) {\r\n        this.onTouched = fn;\r\n    };\r\n    /**\r\n    * Handles error callback\r\n    */\r\n    /**\r\n     * Handles error callback\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    BaseReCaptchaComponent.prototype.handleErrorCallback = /**\r\n     * Handles error callback\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.zone.run((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.onChange(undefined);\r\n            _this.onTouched(undefined);\r\n        }));\r\n        this.error.next();\r\n    };\r\n    /**\r\n    * Handles expired callback\r\n    */\r\n    /**\r\n     * Handles expired callback\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    BaseReCaptchaComponent.prototype.handleExpireCallback = /**\r\n     * Handles expired callback\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.expire.next();\r\n        // reset captcha on expire callback\r\n        this.resetCaptcha();\r\n    };\r\n    BaseReCaptchaComponent.propDecorators = {\r\n        siteKey: [{ type: Input }],\r\n        useGlobalDomain: [{ type: Input }],\r\n        type: [{ type: Input }],\r\n        hl: [{ type: Input }],\r\n        tabIndex: [{ type: Input }],\r\n        success: [{ type: Output }],\r\n        load: [{ type: Output }],\r\n        reset: [{ type: Output }],\r\n        ready: [{ type: Output }],\r\n        error: [{ type: Output }],\r\n        expire: [{ type: Output }],\r\n        captchaWrapperElem: [{ type: ViewChild, args: ['captchaWrapperElem',] }],\r\n        captchaScriptElem: [{ type: ViewChild, args: ['captchaScriptElem',] }]\r\n    };\r\n    return BaseReCaptchaComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @enum {number} */\r\nvar ReCaptchaType = {\r\n    InvisibleReCaptcha: 0,\r\n    ReCaptcha2: 1,\r\n};\r\nReCaptchaType[ReCaptchaType.InvisibleReCaptcha] = 'InvisibleReCaptcha';\r\nReCaptchaType[ReCaptchaType.ReCaptcha2] = 'ReCaptcha2';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ScriptService = /** @class */ (function () {\r\n    function ScriptService(zone) {\r\n        this.zone = zone;\r\n        /**\r\n         * Name of the global google recaptcha script\r\n         */\r\n        this.windowGrecaptcha = 'grecaptcha';\r\n        /**\r\n         * Name of the global callback\r\n         */\r\n        this.windowOnLoadCallbackProperty = 'ngx_captcha_onload_callback';\r\n        this.globalDomain = 'recaptcha.net';\r\n        this.defaultDomain = 'google.com';\r\n    }\r\n    /**\r\n     * @param {?} useGlobalDomain\r\n     * @param {?} render\r\n     * @param {?} onLoad\r\n     * @param {?=} language\r\n     * @return {?}\r\n     */\r\n    ScriptService.prototype.registerCaptchaScript = /**\r\n     * @param {?} useGlobalDomain\r\n     * @param {?} render\r\n     * @param {?} onLoad\r\n     * @param {?=} language\r\n     * @return {?}\r\n     */\r\n    function (useGlobalDomain, render, onLoad, language) {\r\n        var _this = this;\r\n        if (this.grecaptchaScriptLoaded()) {\r\n            // recaptcha script is already loaded\r\n            // just call the callback\r\n            this.zone.run((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                onLoad(window[_this.windowGrecaptcha]);\r\n            }));\r\n            return;\r\n        }\r\n        // we need to patch the callback through global variable, otherwise callback is not accessible\r\n        // note: https://github.com/Enngage/ngx-captcha/issues/2\r\n        window[this.windowOnLoadCallbackProperty] = (/** @type {?} */ (((/**\r\n         * @return {?}\r\n         */\r\n        function () { return _this.zone.run(onLoad.bind(_this, window[_this.windowGrecaptcha])); }))));\r\n        // prepare script elem\r\n        /** @type {?} */\r\n        var scriptElem = document.createElement('script');\r\n        scriptElem.innerHTML = '';\r\n        scriptElem.src = this.getCaptchaScriptUrl(useGlobalDomain, render, language);\r\n        scriptElem.async = true;\r\n        scriptElem.defer = true;\r\n        // add script to header\r\n        document.getElementsByTagName('head')[0].appendChild(scriptElem);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ScriptService.prototype.cleanup = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        window[this.windowOnLoadCallbackProperty] = undefined;\r\n        window[this.windowGrecaptcha] = undefined;\r\n    };\r\n    /**\r\n     * Indicates if google recaptcha script is available and ready to be used\r\n     */\r\n    /**\r\n     * Indicates if google recaptcha script is available and ready to be used\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    ScriptService.prototype.grecaptchaScriptLoaded = /**\r\n     * Indicates if google recaptcha script is available and ready to be used\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (window[this.windowOnLoadCallbackProperty] && window[this.windowGrecaptcha]) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Gets language param used in script url\r\n     */\r\n    /**\r\n     * Gets language param used in script url\r\n     * @private\r\n     * @param {?=} hl\r\n     * @return {?}\r\n     */\r\n    ScriptService.prototype.getLanguageParam = /**\r\n     * Gets language param used in script url\r\n     * @private\r\n     * @param {?=} hl\r\n     * @return {?}\r\n     */\r\n    function (hl) {\r\n        if (!hl) {\r\n            return '';\r\n        }\r\n        return \"&hl=\" + hl;\r\n    };\r\n    /**\r\n    * Url to google api script\r\n    */\r\n    /**\r\n     * Url to google api script\r\n     * @private\r\n     * @param {?} useGlobalDomain\r\n     * @param {?} render\r\n     * @param {?=} language\r\n     * @return {?}\r\n     */\r\n    ScriptService.prototype.getCaptchaScriptUrl = /**\r\n     * Url to google api script\r\n     * @private\r\n     * @param {?} useGlobalDomain\r\n     * @param {?} render\r\n     * @param {?=} language\r\n     * @return {?}\r\n     */\r\n    function (useGlobalDomain, render, language) {\r\n        /** @type {?} */\r\n        var domain = useGlobalDomain ? this.globalDomain : this.defaultDomain;\r\n        // tslint:disable-next-line:max-line-length\r\n        return \"https://www.\" + domain + \"/recaptcha/api.js?onload=\" + this.windowOnLoadCallbackProperty + \"&render=\" + render + this.getLanguageParam(language);\r\n    };\r\n    ScriptService.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    ScriptService.ctorParameters = function () { return [\r\n        { type: NgZone }\r\n    ]; };\r\n    return ScriptService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar InvisibleReCaptchaComponent = /** @class */ (function (_super) {\r\n    __extends(InvisibleReCaptchaComponent, _super);\r\n    function InvisibleReCaptchaComponent(renderer, zone, injector, scriptService) {\r\n        var _this = _super.call(this, renderer, zone, injector, scriptService) || this;\r\n        _this.renderer = renderer;\r\n        _this.zone = zone;\r\n        _this.injector = injector;\r\n        _this.scriptService = scriptService;\r\n        /**\r\n         * This size representing invisible captcha\r\n         */\r\n        _this.size = 'invisible';\r\n        /**\r\n         * Theme\r\n         */\r\n        _this.theme = 'light';\r\n        /**\r\n         * Badge\r\n         */\r\n        _this.badge = 'bottomright';\r\n        _this.recaptchaType = ReCaptchaType.InvisibleReCaptcha;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    InvisibleReCaptchaComponent.prototype.ngOnChanges = /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function (changes) {\r\n        _super.prototype.ngOnChanges.call(this, changes);\r\n    };\r\n    /**\r\n     * Programatically invoke the reCAPTCHA check. Used if the invisible reCAPTCHA is on a div instead of a button.\r\n     */\r\n    /**\r\n     * Programatically invoke the reCAPTCHA check. Used if the invisible reCAPTCHA is on a div instead of a button.\r\n     * @return {?}\r\n     */\r\n    InvisibleReCaptchaComponent.prototype.execute = /**\r\n     * Programatically invoke the reCAPTCHA check. Used if the invisible reCAPTCHA is on a div instead of a button.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        // execute captcha\r\n        this.zone.runOutsideAngular((/**\r\n         * @return {?}\r\n         */\r\n        function () { return _this.reCaptchaApi.execute(_this.captchaId); }));\r\n    };\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    InvisibleReCaptchaComponent.prototype.captchaSpecificSetup = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    /**\r\n    * Gets reCaptcha properties\r\n    */\r\n    /**\r\n     * Gets reCaptcha properties\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    InvisibleReCaptchaComponent.prototype.getCaptchaProperties = /**\r\n     * Gets reCaptcha properties\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        return {\r\n            'sitekey': this.siteKey,\r\n            'callback': (/**\r\n             * @param {?} response\r\n             * @return {?}\r\n             */\r\n            function (response) { return _this.zone.run((/**\r\n             * @return {?}\r\n             */\r\n            function () { return _this.handleCallback(response); })); }),\r\n            'expired-callback': (/**\r\n             * @return {?}\r\n             */\r\n            function () { return _this.zone.run((/**\r\n             * @return {?}\r\n             */\r\n            function () { return _this.handleExpireCallback(); })); }),\r\n            'error-callback': (/**\r\n             * @return {?}\r\n             */\r\n            function () { return _this.zone.run((/**\r\n             * @return {?}\r\n             */\r\n            function () { return _this.handleErrorCallback(); })); }),\r\n            'badge': this.badge,\r\n            'type': this.type,\r\n            'tabindex': this.tabIndex,\r\n            'size': this.size,\r\n            'theme': this.theme\r\n        };\r\n    };\r\n    InvisibleReCaptchaComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ngx-invisible-recaptcha',\r\n                    template: \"\\n  <div #captchaWrapperElem></div>\",\r\n                    providers: [\r\n                        {\r\n                            provide: NG_VALUE_ACCESSOR,\r\n                            useExisting: forwardRef((/**\r\n                             * @return {?}\r\n                             */\r\n                            function () { return InvisibleReCaptchaComponent; })),\r\n                            multi: true,\r\n                        }\r\n                    ]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    InvisibleReCaptchaComponent.ctorParameters = function () { return [\r\n        { type: Renderer2 },\r\n        { type: NgZone },\r\n        { type: Injector },\r\n        { type: ScriptService }\r\n    ]; };\r\n    InvisibleReCaptchaComponent.propDecorators = {\r\n        theme: [{ type: Input }],\r\n        badge: [{ type: Input }],\r\n        hl: [{ type: Input }]\r\n    };\r\n    return InvisibleReCaptchaComponent;\r\n}(BaseReCaptchaComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ReCaptcha2Component = /** @class */ (function (_super) {\r\n    __extends(ReCaptcha2Component, _super);\r\n    function ReCaptcha2Component(renderer, zone, injector, scriptService) {\r\n        var _this = _super.call(this, renderer, zone, injector, scriptService) || this;\r\n        _this.renderer = renderer;\r\n        _this.zone = zone;\r\n        _this.injector = injector;\r\n        _this.scriptService = scriptService;\r\n        /**\r\n         * Name of the global expire callback\r\n         */\r\n        _this.windowOnErrorCallbackProperty = 'ngx_captcha_error_callback';\r\n        /**\r\n         * Name of the global error callback\r\n         */\r\n        _this.windowOnExpireCallbackProperty = 'ngx_captcha_expire_callback';\r\n        /**\r\n         * Theme\r\n         */\r\n        _this.theme = 'light';\r\n        /**\r\n         * Size\r\n         */\r\n        _this.size = 'normal';\r\n        _this.recaptchaType = ReCaptchaType.ReCaptcha2;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    ReCaptcha2Component.prototype.ngOnChanges = /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function (changes) {\r\n        _super.prototype.ngOnChanges.call(this, changes);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ReCaptcha2Component.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        window[this.windowOnErrorCallbackProperty] = {};\r\n        window[this.windowOnExpireCallbackProperty] = {};\r\n    };\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    ReCaptcha2Component.prototype.captchaSpecificSetup = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.registerCallbacks();\r\n    };\r\n    /**\r\n     * Gets reCaptcha properties\r\n    */\r\n    /**\r\n     * Gets reCaptcha properties\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    ReCaptcha2Component.prototype.getCaptchaProperties = /**\r\n     * Gets reCaptcha properties\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        return {\r\n            'sitekey': this.siteKey,\r\n            'callback': (/**\r\n             * @param {?} response\r\n             * @return {?}\r\n             */\r\n            function (response) { return _this.zone.run((/**\r\n             * @return {?}\r\n             */\r\n            function () { return _this.handleCallback(response); })); }),\r\n            'expired-callback': (/**\r\n             * @return {?}\r\n             */\r\n            function () { return _this.zone.run((/**\r\n             * @return {?}\r\n             */\r\n            function () { return _this.handleExpireCallback(); })); }),\r\n            'error-callback': (/**\r\n             * @return {?}\r\n             */\r\n            function () { return _this.zone.run((/**\r\n             * @return {?}\r\n             */\r\n            function () { return _this.handleErrorCallback(); })); }),\r\n            'theme': this.theme,\r\n            'type': this.type,\r\n            'size': this.size,\r\n            'tabindex': this.tabIndex\r\n        };\r\n    };\r\n    /**\r\n     * Registers global callbacks\r\n    */\r\n    /**\r\n     * Registers global callbacks\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    ReCaptcha2Component.prototype.registerCallbacks = /**\r\n     * Registers global callbacks\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        window[this.windowOnErrorCallbackProperty] = _super.prototype.handleErrorCallback.bind(this);\r\n        window[this.windowOnExpireCallbackProperty] = _super.prototype.handleExpireCallback.bind(this);\r\n    };\r\n    ReCaptcha2Component.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ngx-recaptcha2',\r\n                    template: \"\\n  <div #captchaWrapperElem></div>\",\r\n                    providers: [\r\n                        {\r\n                            provide: NG_VALUE_ACCESSOR,\r\n                            useExisting: forwardRef((/**\r\n                             * @return {?}\r\n                             */\r\n                            function () { return ReCaptcha2Component; })),\r\n                            multi: true,\r\n                        }\r\n                    ]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    ReCaptcha2Component.ctorParameters = function () { return [\r\n        { type: Renderer2 },\r\n        { type: NgZone },\r\n        { type: Injector },\r\n        { type: ScriptService }\r\n    ]; };\r\n    ReCaptcha2Component.propDecorators = {\r\n        theme: [{ type: Input }],\r\n        size: [{ type: Input }],\r\n        hl: [{ type: Input }]\r\n    };\r\n    return ReCaptcha2Component;\r\n}(BaseReCaptchaComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ReCaptchaV3Service = /** @class */ (function () {\r\n    function ReCaptchaV3Service(scriptService, zone) {\r\n        this.scriptService = scriptService;\r\n        this.zone = zone;\r\n    }\r\n    /**\r\n     * Executes reCaptcha v3 with given action and passes token via callback. You need to verify\r\n     * this callback in your backend to get meaningful results.\r\n     *\r\n     * For more information see https://developers.google.com/recaptcha/docs/v3\r\n     *\r\n     * @param siteKey Site key found in your google admin panel\r\n     * @param action Action to log\r\n     */\r\n    /**\r\n     * Executes reCaptcha v3 with given action and passes token via callback. You need to verify\r\n     * this callback in your backend to get meaningful results.\r\n     *\r\n     * For more information see https://developers.google.com/recaptcha/docs/v3\r\n     *\r\n     * @param {?} siteKey Site key found in your google admin panel\r\n     * @param {?} action Action to log\r\n     * @param {?} callback\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    ReCaptchaV3Service.prototype.execute = /**\r\n     * Executes reCaptcha v3 with given action and passes token via callback. You need to verify\r\n     * this callback in your backend to get meaningful results.\r\n     *\r\n     * For more information see https://developers.google.com/recaptcha/docs/v3\r\n     *\r\n     * @param {?} siteKey Site key found in your google admin panel\r\n     * @param {?} action Action to log\r\n     * @param {?} callback\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    function (siteKey, action, callback, config) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var useGlobalDomain = config && config.useGlobalDomain ? true : false;\r\n        this.scriptService.registerCaptchaScript(useGlobalDomain, siteKey, (/**\r\n         * @param {?} grecaptcha\r\n         * @return {?}\r\n         */\r\n        function (grecaptcha) {\r\n            _this.zone.runOutsideAngular((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                grecaptcha.execute(siteKey, {\r\n                    action: action\r\n                }).then((/**\r\n                 * @param {?} token\r\n                 * @return {?}\r\n                 */\r\n                function (token) {\r\n                    _this.zone.run((/**\r\n                     * @return {?}\r\n                     */\r\n                    function () { return callback(token); }));\r\n                }));\r\n            }));\r\n        }));\r\n    };\r\n    ReCaptchaV3Service.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    ReCaptchaV3Service.ctorParameters = function () { return [\r\n        { type: ScriptService },\r\n        { type: NgZone }\r\n    ]; };\r\n    return ReCaptchaV3Service;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NgxCaptchaModule = /** @class */ (function () {\r\n    function NgxCaptchaModule() {\r\n    }\r\n    NgxCaptchaModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        CommonModule\r\n                    ],\r\n                    declarations: [\r\n                        ReCaptcha2Component,\r\n                        InvisibleReCaptchaComponent\r\n                    ],\r\n                    providers: [\r\n                        ScriptService,\r\n                        ReCaptchaV3Service\r\n                    ],\r\n                    exports: [\r\n                        ReCaptcha2Component,\r\n                        InvisibleReCaptchaComponent\r\n                    ]\r\n                },] }\r\n    ];\r\n    return NgxCaptchaModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { BaseReCaptchaComponent, InvisibleReCaptchaComponent, ReCaptcha2Component, ReCaptchaType, ScriptService, ReCaptchaV3Service, NgxCaptchaModule };\n\n//# sourceMappingURL=ngx-captcha.js.map","module.exports = \"\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGhlbnRpY2F0aW9uL2F1dGgtaG9tZS9hdXRoLWhvbWUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-home',\n  templateUrl: './auth-home.component.html',\n  styleUrls: ['./auth-home.component.scss']\n})\nexport class AuthHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { AuthHomeComponent } from './auth-home/auth-home.component';\nimport { AuthenticationRoutingModule } from './authentication.routing.module';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport { ControlService } from './sign-up/control.service';\nimport { SharedModule } from '../shared/shared.module';\nimport { NgxCaptchaModule, ReCaptchaV3Service } from 'ngx-captcha';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { NewPasswordComponent } from './new-password/new-password.component';\nimport { AuthService } from './services/auth.service';\nimport { VerifyOTPComponent } from './verify-otp/verify-otp.component';\nimport { OTPService } from './services/otp.service';\n\n@NgModule({\n    declarations: [LoginComponent, SignUpComponent, AuthHomeComponent, ForgotPasswordComponent, NewPasswordComponent, VerifyOTPComponent],\n    imports: [ CommonModule, ReactiveFormsModule, AuthenticationRoutingModule,NgxCaptchaModule],\n    exports: [],\n    providers: [ControlService, AuthService, OTPService],\n})\nexport class AuthenticationModule {}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { NewPasswordComponent } from './new-password/new-password.component';\n\n/* Authentication Routes */\nconst routes: Routes = [\n    { path: 'login', component: LoginComponent },\n    {path: 'signUp', component: SignUpComponent},\n    {path: 'resetPassword', component: ForgotPasswordComponent},\n    {path: 'newPassword', component: NewPasswordComponent},\n    {path: '', pathMatch: 'full', redirectTo: 'login'},\n    { path: '**' ,  pathMatch: 'full', redirectTo: 'login'}\n];\n/* End of Authentication Routes */\n\n@NgModule({\n    imports: [CommonModule, RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AuthenticationRoutingModule {}\n","module.exports = \"<div class=\\\"bgimg-1\\\">\\n  <div class=\\\"row card-form\\\">\\n    <div class=\\\"col s1 m4 l4 xl4\\\"></div>\\n     <div class=\\\"col s10 m4 l4 xl4\\\">\\n      <div class=\\\"card-panel\\\">\\n          <div class=\\\"center\\\">\\n            <img src=\\\"/assets/login/images/logo.png\\\" (click)=\\\"navigateToVahana()\\\" style=\\\"cursor: pointer\\\">\\n          </div>\\n          <div class=\\\"divInfo center\\\">\\n            <span class=\\\"heading\\\">Forgot Password?</span>\\n          </div>\\n          <span class=\\\"heading\\\">Step 01/02</span>\\n          <p>\\n          <span class=\\\"heading1\\\">Please provide your Mobile Number to verify your account.</span>\\n\\n          <div id=\\\"forgotPasswordForm\\\">\\n            <form [formGroup]=\\\"forgotPasswordForm\\\" (ngSubmit)=\\\"submit()\\\">\\n                <div class=\\\"input-field1\\\">\\n                    <label >Mobile Number</label>\\n                    <input id=\\\"email\\\" placeholder=\\\"Enter Mobile Number\\\" type=\\\"text\\\" class=\\\"validate\\\" formControlName=\\\"userInput\\\">\\n                    <small style=\\\"color:red;\\\"\\n                    *ngIf=\\\"(forgotPasswordForm.controls['userInput'].hasError('patternError')) &&\\n                    (forgotPasswordForm.controls['userInput'].dirty)\\\"\\n                    class=\\\"form-text text-muted\\\">\\n                    <!-- Please enter valid mobile number or email Address. -->\\n                    Please enter valid mobile number \\n                  </small>\\n                   \\n                  <small style=\\\"color:red;\\\"\\n                  *ngIf=\\\"(forgotPasswordForm.controls['userInput'].hasError('accountDoesNotExist')) &&  (forgotPasswordForm.controls['userInput'].dirty)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                  Account does not exist with this credential\\n                </small>\\n\\n\\n                  </div>\\n                <div >\\n                    \\n                </div>\\n                <div class=\\\"input-field1\\\" *ngIf=\\\"isOTPScreen\\\">\\n                     <app-verify-otp [groupName]=\\\"forgotPasswordForm\\\" [isSetNewPassword]=\\\"isSetNewPassword\\\" (optFilled)=\\\"enableDisableButton($event)\\\"></app-verify-otp>\\n                    \\n                </div>\\n\\n                <div class=\\\"row \\\">\\n                    <div class=\\\"input-field col s12 \\\">\\n                      <button [disabled]=\\\"!forgotPasswordForm.valid || !enableField\\\" type=\\\"submit\\\" class=\\\"btn sign-in-btn\\\">\\n                        <span *ngIf=\\\"!showSmallLoader\\\">Proceed to Set New Password</span> \\n                        <i *ngIf=\\\"showSmallLoader\\\" class=\\\"fa fa-circle-o-notch fa-spin\\\" style=\\\"font-size:24px\\\"></i>\\n                      </button>\\n                      <p class=\\\"font12 center\\\">Already have an account? <a (click)=\\\"navigateToLogin()\\\">Login</a></p>\\n                    </div>\\n                </div>\\n            </form>\\n          </div>\\n      </div>\\n     </div>\\n    <div class=\\\"col s1 m4 l4 xl4\\\"></div>\\n  </div>\\n</div>\"","module.exports = \".bgimg-1 {\\n  height: calc(100vh);\\n  background-position: center 55%;\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  background-image: url(\\\"/assets/login/images/signup-bg.jpg\\\");\\n  -o-object-fit: contain;\\n     object-fit: contain; }\\n\\n.heading {\\n  font-family: 'Raleway-SemiBold';\\n  color: #757575;\\n  font-size: 16px; }\\n\\n.heading1 {\\n  font-family: 'Raleway-Regular';\\n  color: #757575;\\n  font-size: 14px; }\\n\\n.input-field1 label {\\n  font-size: 13px;\\n  text-align: left;\\n  width: 100%;\\n  float: left;\\n  margin-bottom: 2px;\\n  color: #2c60ad;\\n  margin-top: 5px; }\\n\\n.input-field1 input {\\n  border: 1px solid #b9b9b9;\\n  background: #fff;\\n  box-shadow: none;\\n  padding: 0 8px;\\n  border-radius: 4px;\\n  width: calc(100% - 20px);\\n  line-height: 25px;\\n  height: 38px;\\n  font-size: 13px;\\n  margin: 0px; }\\n\\n.sign-in-btn {\\n  width: 100%;\\n  background: #2457a7; }\\n\\ntable {\\n  border-collapse: unset; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RlY2ltYWwvRGVjaW1hbC92YWhhbmEvdmFoYW5hLXBvcnRhbC1hdXRoZW50aWNhdGlvbi9zcmMvYXBwL2F1dGhlbnRpY2F0aW9uL2ZvcmdvdC1wYXNzd29yZC9mb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQkFBbUI7RUFDbkIsK0JBQStCO0VBQy9CLDRCQUE0QjtFQUM1QixzQkFBc0I7RUFDdEIsMkRBQTJEO0VBQzNELHNCQUFtQjtLQUFuQixtQkFBbUIsRUFBQTs7QUFHdkI7RUFDSSwrQkFBK0I7RUFDL0IsY0FBYztFQUNkLGVBQWUsRUFBQTs7QUFHbkI7RUFDSSw4QkFBOEI7RUFDOUIsY0FBYztFQUNkLGVBQWUsRUFBQTs7QUFHbkI7RUFFUSxlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLFdBQVc7RUFDWCxXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLGNBQWM7RUFDZCxlQUFlLEVBQUE7O0FBUnZCO0VBWVEseUJBQXlCO0VBQ3pCLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsY0FBYztFQUNkLGtCQUFrQjtFQUNsQix3QkFBd0I7RUFDeEIsaUJBQWlCO0VBQ2pCLFlBQVk7RUFDWixlQUFlO0VBQ2YsV0FBVyxFQUFBOztBQUluQjtFQUNJLFdBQVc7RUFDWCxtQkFBbUIsRUFBQTs7QUFHdkI7RUFDSSxzQkFBc0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2F1dGhlbnRpY2F0aW9uL2ZvcmdvdC1wYXNzd29yZC9mb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYmdpbWctMSB7XG4gICAgaGVpZ2h0OiBjYWxjKDEwMHZoKTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgNTUlO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvYXNzZXRzL2xvZ2luL2ltYWdlcy9zaWdudXAtYmcuanBnXCIpO1xuICAgIG9iamVjdC1maXQ6IGNvbnRhaW47XG59XG5cbi5oZWFkaW5ne1xuICAgIGZvbnQtZmFtaWx5OiAnUmFsZXdheS1TZW1pQm9sZCc7XG4gICAgY29sb3I6ICM3NTc1NzU7XG4gICAgZm9udC1zaXplOiAxNnB4O1xufVxuXG4uaGVhZGluZzF7XG4gICAgZm9udC1mYW1pbHk6ICdSYWxld2F5LVJlZ3VsYXInO1xuICAgIGNvbG9yOiAjNzU3NTc1O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbn1cblxuLmlucHV0LWZpZWxkMSB7XG4gICAgbGFiZWwge1xuICAgICAgICBmb250LXNpemU6IDEzcHg7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMnB4O1xuICAgICAgICBjb2xvcjogIzJjNjBhZDtcbiAgICAgICAgbWFyZ2luLXRvcDogNXB4O1xuICAgIH1cblxuICAgIGlucHV0IHtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2I5YjliOTtcbiAgICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgcGFkZGluZzogMCA4cHg7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDIwcHgpO1xuICAgICAgICBsaW5lLWhlaWdodDogMjVweDtcbiAgICAgICAgaGVpZ2h0OiAzOHB4O1xuICAgICAgICBmb250LXNpemU6IDEzcHg7XG4gICAgICAgIG1hcmdpbjogMHB4O1xuICAgIH1cbn1cblxuLnNpZ24taW4tYnRuIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kOiAjMjQ1N2E3O1xufVxuXG50YWJsZXtcbiAgICBib3JkZXItY29sbGFwc2U6IHVuc2V0O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { BehaviorSubject, Subject, Observable, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { NotifyService } from 'src/app/shared/notify/notify.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  public forgotPasswordForm: FormGroup;\n  private validateFields = new Subject<object>();\n  private mobileNumberRegex: any = new RegExp(/^[789]\\d{9}$/);\n  private emailRegex: any = new RegExp('^[a-z0-9]+(\\\\.[_a-z0-9]+)*@[a-z0-9-]+(\\\\.[a-z0-9-]+)*(\\\\.[a-z]{2,15})$');\n  public isOTPScreen: boolean;\n  public isSetNewPassword: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  public isValidateAPICompleted: Subject<boolean>;\n  public showSmallLoader: boolean;\n  public enableField=false;\n  constructor(private formBuilder: FormBuilder, private router: Router, private authService: AuthService,\n    private notifyService: NotifyService) { }\n\n  ngOnInit() {\n    this.initForm();\n    this.validateUserInput();\n    this.initValidateFields();\n    this.subScribeISSetNewPassword();\n\n  }\n  public initForm() {\n    this.forgotPasswordForm = this.formBuilder.group({\n      userInput: ['', [Validators.required]],\n    });\n  }\n  submit() {\n    this.authService.forgotUserInput = this.getEmailORMobileNumberObject(this.forgotPasswordForm.value.userInput);\n    this.navigateToNewPassword();\n\n  }\n\n  public resendOTP() {\n    console.log('resend OTP');\n  }\n\n  public navigateToNewPassword() {\n    if (this.isOTPScreen) {\n      this.isSetNewPassword.next(true);\n    } else {\n      this.isSetNewPassword.next(false);\n      this.router.navigate(['auth/newPassword']);\n    }\n\n  }\n\n  /* Get Email Or Mobile Number Object for User Exist or not */\n  public getEmailORMobileNumberCodeObj(value: string): object {\n    let reqObj = {};\n    const isMobile = this.mobileNumberRegex.test(value);\n    if (isMobile) {\n      //1 is code for mobile\n      reqObj = { 1: value };\n    } else {\n      //2 is code for email\n      reqObj = { 2: value }\n    }\n    return reqObj;\n  }\n  /* End of Get Email Or Mobile Number Object */\n\n\n\n\n  public getEmailORMobileNumberObject(value: string): object {\n\n    let reqObj = {};\n    const isMobile = this.mobileNumberRegex.test(value);\n    if (isMobile) {\n      reqObj = { mobileNumber: value };\n    } else {\n      reqObj = { email: value }\n    }\n    return reqObj;\n  }\n\n  public validateUserInput() {\n    this.forgotPasswordForm.controls['userInput'].valueChanges.pipe(debounceTime(400), distinctUntilChanged()).subscribe((inputValue) => {\n      if (this.mobileNumberRegex.test(inputValue)) {\n        const userInput = this.getEmailORMobileNumberCodeObj(inputValue);\n        this.validateFields.next(userInput);\n        this.isValidateAPICompleted = new Subject();\n        this.showOTPScreenOnValidateAPIResponse();\n        // setting error so button remain Disabled until validation is not done yet\n      } else if (this.emailRegex.test(inputValue)) {\n        /* Commented for now */\n        this.notifyService.showToast('Email are not allowed', 'error');\n        this.forgotPasswordForm.controls['userInput'].setErrors({ 'patternError': true });\n        // const userInput = this.getEmailORMobileNumberCodeObj(inputValue);\n        // this.validateFields.next(userInput);\n        // this.isOTPScreen = false;\n      }\n      else {\n        this.isOTPScreen = false;\n        this.forgotPasswordForm.controls['userInput'].setErrors({ 'patternError': true });\n      }\n    });\n  }\n\n\n  public initValidateFields(): void {\n    this.validateFields.pipe(debounceTime(500),\n      distinctUntilChanged()).subscribe((userInputObj: object) => {\n        if (userInputObj) {\n          this.validateAPI(userInputObj);\n        }\n      });\n  }\n\n  public validateAPI(userInputObj: object): Observable<any> {\n    /* this api return the true if account doesn't exist */\n    this.showSmallLoader = false;\n    this.authService.validateFields(userInputObj[Object.keys(userInputObj)[0]], Object.keys(userInputObj)[0]).subscribe((resp) => {\n      if (resp) {\n        this.showSmallLoader = false;\n        this.forgotPasswordForm.controls['userInput'].setErrors({ accountDoesNotExist: true });\n      }\n    },\n      err => {\n        //HERE\n        this.showSmallLoader = false;\n        if (err.errorCode == 'ROUTER_TARGERSERVER_EXECUTION') {\n          this.forgotPasswordForm.controls['userInput'].setErrors({ errorInExecutingAPI: true });\n          this.notifyService.showToast(err.errorCode, 'error');\n        } else {\n          this.forgotPasswordForm.controls['userInput'].setErrors(null);\n          this.isValidateAPICompleted.next(true);\n        }\n\n      });\n    return of('');\n  }\n\n\n  public showOTPScreenOnValidateAPIResponse() {\n    this.isValidateAPICompleted.subscribe((isCompleted) => {\n      if (isCompleted) {\n        this.isOTPScreen = true;\n        this.forgotPasswordForm.setErrors({ 'otpNotGenerated': true });\n        this.isValidateAPICompleted.unsubscribe();\n      }\n    });\n  }\n\n  public subScribeISSetNewPassword() {\n    console.log('init set');\n    this.isSetNewPassword.subscribe((resp) => {\n      if (!resp) {\n        console.log('init set true');\n        this.showSmallLoader = false;\n        this.forgotPasswordForm.controls['userInput'].setErrors({ aacountNotExist: true });\n      } else {\n        console.log('init seswswswt');\n        this.forgotPasswordForm.controls['userInput'].setErrors(null);\n      }\n    });\n  }\n\n\n  public navigateToLogin() {\n    this.router.navigate(['auth/login']);\n  }\n\n  public navigateToVahana(): void {\n    this.router.navigate(['auth/login']);\n  }\n\n\n  enableDisableButton(value){\n    console.log(\"enable/disable Button: \",value);\n    console.log(this.forgotPasswordForm)\n    this.enableField = value;\n  }\n}\n","module.exports = \"<div class=\\\"bgimg-1\\\">\\n  <div class=\\\"row card-form\\\">\\n    <div class=\\\"col s1 m4 l4 xl4\\\"></div>\\n    <div class=\\\"col s10 m4 l4 xl4\\\">\\n      <div class=\\\"card-panel\\\">\\n        <div class=\\\"center\\\">\\n          <img src=\\\"/assets/login/images/logo.png\\\" (click)=\\\"navigateToVahana()\\\" style=\\\"cursor: pointer\\\">\\n        </div>\\n        <div class=\\\"divInfo center\\\">\\n          <span class=\\\" infoText\\\">We are glad, you're back. Proceed to Sign In</span>\\n        </div>\\n\\n        <div id=\\\"signInForm\\\">\\n          <form [formGroup]=\\\"signInForm\\\" (ngSubmit)=\\\"submit()\\\">\\n            <!-- Email Row-->\\n            <div class=\\\"input-field1\\\">\\n              <label >Email ID/Mobile Number</label>\\n              <input id=\\\"email\\\" placeholder=\\\"Enter Email ID or Mobile Number\\\" type=\\\"text\\\" class=\\\"validate\\\" formControlName=\\\"userInput\\\">\\n              <small style=\\\"color:red;\\\"\\n              *ngIf=\\\"(signInForm.controls['userInput'].hasError('patternError')) &&\\n              (signInForm.controls['userInput'].dirty)\\\"\\n              class=\\\"form-text text-muted\\\">\\n              Please enter valid mobile number or email Address.\\n            </small>\\n           \\n            <small style=\\\"color:red;\\\"\\n                  *ngIf=\\\"(signInForm.controls['userInput'].hasError('accountDoesNotExist')) &&  (signInForm.controls['userInput'].dirty)\\\"\\n                  class=\\\"form-text text-muted\\\">\\n                  Account does not exist with this credential\\n                </small>\\n\\n\\n            </div>\\n            \\n  \\n\\n            <div class=\\\"input-field1\\\">\\n              <label>Password</label>\\n              <input id=\\\"password\\\" placeholder=\\\"*******\\\" type=\\\"password\\\" class=\\\"validate\\\" formControlName=\\\"password\\\">\\n            </div>\\n\\n            <!-- <div class=\\\"input-field1\\\" style=\\\"padding-top: 10px;\\\">\\n              <ngx-recaptcha2 #captchaElem [siteKey]=\\\"captcha\\\" [useGlobalDomain]=\\\"false\\\"\\n                [size]=\\\"'10px'\\\"    formControlName=\\\"recaptcha\\\">\\n              </ngx-recaptcha2>\\n            </div> -->\\n\\n            <div class=\\\"row \\\">\\n              <div class=\\\"input-field col s12 \\\">\\n                <button [disabled]=\\\"signInForm.invalid\\\" type=\\\"submit\\\"  class=\\\"waves-effect btn sign-in-btn\\\">Sign\\n                  In</button>\\n                \\n                <p class=\\\"font12 center\\\">Don't have an account? <a (click)=\\\"navigateToSignUp()\\\">Sign Up</a></p>\\n                <p class=\\\"font12 center\\\">Don't remember your password? <a (click)=\\\"navigateToForgotPassword()\\\">Reset</a></p>\\n              </div>\\n            </div>\\n\\n\\n\\n            <!-- End of Email Row-->\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col s1 m4 l4 xl4\\\"></div>\\n  </div>\\n</div>\"","module.exports = \".bgimg-1 {\\n  height: calc(110vh);\\n  background-position: center 55%;\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  background-image: url(\\\"/assets/login/images/signup-bg.jpg\\\");\\n  -o-object-fit: contain;\\n     object-fit: contain; }\\n\\n.card-panel {\\n  transition: box-shadow .25s;\\n  padding: 24px;\\n  margin: .5rem 0 1rem 0;\\n  border-radius: 2px;\\n  background-color: #fff; }\\n\\n.infoText {\\n  font-size: 16px;\\n  color: grey;\\n  font-weight: 500; }\\n\\n.divInfo {\\n  padding-left: 70px;\\n  padding-right: 75px; }\\n\\n.input-field1 label {\\n  font-size: 13px;\\n  text-align: left;\\n  width: 100%;\\n  float: left;\\n  margin-bottom: 2px;\\n  color: #2c60ad;\\n  margin-top: 5px; }\\n\\n.input-field1 input {\\n  border: 1px solid #b9b9b9;\\n  background: #fff;\\n  box-shadow: none;\\n  padding: 0 8px;\\n  border-radius: 4px;\\n  width: calc(100% - 20px);\\n  line-height: 25px;\\n  height: 38px;\\n  font-size: 13px;\\n  margin: 0px; }\\n\\n.sign-in-btn {\\n  width: 100%;\\n  background: #2457a7; }\\n\\n:host ::ng-deep .rc-anchor-light.rc-anchor-normal {\\n  border: 0px solid #d3d3d3 !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RlY2ltYWwvRGVjaW1hbC92YWhhbmEvdmFoYW5hLXBvcnRhbC1hdXRoZW50aWNhdGlvbi9zcmMvYXBwL2F1dGhlbnRpY2F0aW9uL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksbUJBQW1CO0VBQ25CLCtCQUErQjtFQUMvQiw0QkFBNEI7RUFDNUIsc0JBQXNCO0VBQ3RCLDJEQUEyRDtFQUMzRCxzQkFBbUI7S0FBbkIsbUJBQW1CLEVBQUE7O0FBR3ZCO0VBQ0ksMkJBQTJCO0VBQzNCLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLHNCQUFzQixFQUFBOztBQUcxQjtFQUVJLGVBQWU7RUFDZixXQUFXO0VBQ1gsZ0JBQWdCLEVBQUE7O0FBR3BCO0VBQ0ksa0JBQWtCO0VBQ2xCLG1CQUFtQixFQUFBOztBQUd2QjtFQUVRLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsV0FBVztFQUNYLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsY0FBYztFQUNkLGVBQWUsRUFBQTs7QUFSdkI7RUFZUSx5QkFBeUI7RUFDekIsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLHdCQUF3QjtFQUN4QixpQkFBaUI7RUFDakIsWUFBWTtFQUNaLGVBQWU7RUFDZixXQUFXLEVBQUE7O0FBSW5CO0VBQ0ksV0FBVztFQUNYLG1CQUFtQixFQUFBOztBQUd2QjtFQUNJLG9DQUFvQyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvYXV0aGVudGljYXRpb24vbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcblxuLmJnaW1nLTEge1xuICAgIGhlaWdodDogY2FsYygxMTB2aCk7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIDU1JTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2Fzc2V0cy9sb2dpbi9pbWFnZXMvc2lnbnVwLWJnLmpwZ1wiKTtcbiAgICBvYmplY3QtZml0OiBjb250YWluO1xufVxuXG4uY2FyZC1wYW5lbCB7XG4gICAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyAuMjVzO1xuICAgIHBhZGRpbmc6IDI0cHg7XG4gICAgbWFyZ2luOiAuNXJlbSAwIDFyZW0gMDtcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbn1cblxuLmluZm9UZXh0XG57XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGNvbG9yOiBncmV5O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbi5kaXZJbmZve1xuICAgIHBhZGRpbmctbGVmdDogNzBweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiA3NXB4O1xufVxuXG4uaW5wdXQtZmllbGQxIHtcbiAgICBsYWJlbCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAycHg7XG4gICAgICAgIGNvbG9yOiAjMmM2MGFkO1xuICAgICAgICBtYXJnaW4tdG9wOiA1cHg7XG4gICAgfVxuXG4gICAgaW5wdXQge1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjYjliOWI5O1xuICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgICAgICBib3gtc2hhZG93OiBub25lO1xuICAgICAgICBwYWRkaW5nOiAwIDhweDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgICB3aWR0aDogY2FsYygxMDAlIC0gMjBweCk7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyNXB4O1xuICAgICAgICBoZWlnaHQ6IDM4cHg7XG4gICAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICAgICAgbWFyZ2luOiAwcHg7XG4gICAgfVxufVxuXG4uc2lnbi1pbi1idG4ge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJhY2tncm91bmQ6ICMyNDU3YTc7XG59XG5cbjpob3N0IDo6bmctZGVlcCAucmMtYW5jaG9yLWxpZ2h0LnJjLWFuY2hvci1ub3JtYWwge1xuICAgIGJvcmRlcjogMHB4IHNvbGlkICNkM2QzZDMgIWltcG9ydGFudDtcbn1cblxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ReCaptchaV3Service } from 'ngx-captcha';\nimport { AuthService } from '../services/auth.service';\nimport { LoaderService } from 'src/app/shared/loader/loader.service';\nimport { IResponse } from '../requestResponseModel/response.interface';\nimport { Subject, of, Observable } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { NotifyService } from 'src/app/shared/notify/notify.service';\nimport { UtilityService } from 'src/app/shared/services/platwareService/utility.service';\nimport { AppConstant } from 'src/app/shared/services/AppConstant';\nimport { PlatwareService } from 'src/app/shared/services/platwareService/platware.service';\n\ndeclare const $: any;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  public signInForm: FormGroup;\n  private validateFields = new Subject<object>();\n  private fieldsType: string = '';\n  private mobileNumberRegex: any = new RegExp(/^[789]\\d{9}$/);\n  private emailRegex: any = new RegExp(/^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n  public captcha: string;\n  constructor(private formBuilder: FormBuilder, private router: Router,\n    private authService: AuthService, private loaderService: LoaderService,\n    private notifyService: NotifyService, private utility: UtilityService,\n     private utilityService: UtilityService,private platwareService:PlatwareService) { }\n\n  ngOnInit() {\n    this.initForm();\n    this.addCaptcha();\n    this.initValidateFields();\n    this.validateUserInput();\n    this.scrollToWindowToTop();\n  }\n\n  public initForm() {\n    this.signInForm = this.formBuilder.group({\n      userInput: [this.utilityService.getLocalStorage(AppConstant.SIGNUP_EMAIL), [Validators.required]],\n      password: ['', Validators.required],\n    });\n    this.getCaptureKey();\n  }\n\n  submit() {\n    console.log(this.signInForm.value);\n    this.callSignInApi();\n  }\n\n  /* This method navigate user to signUp */\n  public navigateToSignUp(): void {\n    this.router.navigate(['auth/signUp']);\n  }\n\n  /* This method navigate user to Forgot Password */\n  public navigateToForgotPassword(): void {\n    this.router.navigate(['auth/resetPassword']);\n  }\n\n  /*Method for adding Captcha to formControl Object */\n  public addCaptcha(): void {\n    //  this.signInForm.addControl('recaptcha', new FormControl('', [Validators.required]));\n  }\n  /*End of method for adding Captcha to formControl Object */\n\n  public callSignInApi(): void {\n    this.loaderService.showLoader();\n    let reqObj = {};\n    reqObj = this.getEmailORMobileObj(this.signInForm.value.userInput);\n    reqObj['password'] = this.signInForm.value.password;\n    let self = this;\n\n    this.authService.signIn(reqObj, function(response) {\n      self.loaderService.hideLoader();\n      if (response.status) {\n        self.notifyService.showToast('Welcome to Vahana Portal! ','success');\n        response = JSON.parse(response['data']);\n        self.saveUserData(response);\n        window.open('/vahana/', '_top');\n      } else {\n        self.notifyService.showToast('Login failed.','error');\n      }\n    });\n  }\n\n\n  // public callSignInApi(): void {\n  //   this.loaderService.showLoader();\n  //   let reqObj = {};\n  //   reqObj = this.getEmailORMobileObj(this.signInForm.value.userInput);\n  //   reqObj['password'] = this.signInForm.value.password;\n  //   let self = this;\n\n\n  //   this.authService.signIn(reqObj).subscribe(\n  //     (next)=>{\n  //       if(next){\n  //         self.loaderService.hideLoader();\n  //         if (next.status) {\n  //           self.notifyService.showToast('Welcome to Vahana Portal! ','success');\n  //           next = JSON.parse(next['data']);\n  //           self.saveUserData(next);\n  //           window.open('/vahana/', '_top');\n  //         } else {\n  //           self.utilityService.getError(next,'AUTH_VAHANA')\n  //         }\n  //       }\n  //     },(error)=>{\n  //       self.loaderService.hideLoader();\n  //       self.utilityService.getError(error,'AUTH_VAHANA')\n  //     }\n  //   );\n  // }\n\n  saveUserData(response) {\n    let _response = response['response'];\n    _response['defaultOrg'] = _response['orgId'];\n    _response['userId'] = _response['userDetails']['userId']\n    _response[AppConstant.COMMUNICATION] = _response['userDetails'][AppConstant.COMMUNICATION];\n    _response[AppConstant.CITY] = _response['userDetails'][AppConstant.CITY]\n    _response[AppConstant.COUNTRY] = _response['userDetails'][AppConstant.COUNTRY]\n    _response[AppConstant.ADDRESS] = _response['userDetails'][AppConstant.ADDRESS]\n    _response[AppConstant.FULL_NAME] = _response['userDetails'][AppConstant.FULL_NAME]\n    _response[AppConstant.ORGANIZATION_NAME] = _response['userDetails'][AppConstant.ORGANIZATION_NAME]\n    _response[AppConstant.POSTAL_CODE] = _response['userDetails'][AppConstant.POSTAL_CODE]\n    _response[AppConstant.STATE] = _response['userDetails'][AppConstant.STATE]\n\n    this.utility.saveUserDetail(_response);\n  }\n\n  private getCaptureKey() {\n    this.authService.getCaptureKey().subscribe((result) => {\n      this.captcha = result['captcha'];\n      console.log(this.captcha)\n    })\n  }\n\n  public initValidateFields() {\n    this.validateFields.pipe(distinctUntilChanged()).subscribe((userInputObj: object) => {\n      this.validateAPI(userInputObj);\n    });\n  }\n\n  public validateAPI(userInputObj: object): Observable<any> {\n    this.authService.validateFields(userInputObj[Object.keys(userInputObj)[0]], Object.keys(userInputObj)[0]).subscribe((resp) => {\n      if (resp) {\n        this.signInForm.controls['userInput'].setErrors({ accountDoesNotExist: true });\n      }\n    },\n      err => { this.signInForm.controls['userInput'].setErrors(null); });\n    return of('');\n  }\n\n  /* validate userInput*/\n  public validateUserInput() {\n\n    this.signInForm.controls['userInput'].valueChanges.pipe(debounceTime(400), distinctUntilChanged()).subscribe((inputValue) => {\n      if (this.emailRegex.test(inputValue) || this.mobileNumberRegex.test(inputValue)) {\n        this.signInForm.controls['userInput'].setErrors(null);\n        const userInput = this.getEmailORMobileNumberCodeObj(inputValue);\n        this.validateFields.next(userInput);\n      } else {\n        this.signInForm.controls['userInput'].setErrors({ 'patternError': true });\n      }\n    });\n  }\n  /* End of validate userInput*/\n\n  /* Get Email Or Mobile Number Object for User Exist or not */\n  public getEmailORMobileNumberCodeObj(value: string): object {\n    let reqObj = {};\n    const isMobile = this.mobileNumberRegex.test(value);\n    if (isMobile) {\n      //1 is code for mobile\n      reqObj = { '1': value };\n    } else {\n      //2 is code for email\n      reqObj = { '2': value };\n    }\n    return reqObj;\n  }\n  /* End of Get Email Or Mobile Number Object */\n\n\n  /* Get Email Or Mobile Number Object for User Exist or not */\n  public getEmailORMobileObj(value: string): object {\n    let reqObj = {};\n    const isMobile = this.mobileNumberRegex.test(value);\n    if (isMobile) {\n      //1 is code for mobile\n      reqObj = { 'id': value, 'authType': 'mobile', 'email': '' };\n    } else {\n      //2 is code for email\n      reqObj = { 'id': value, 'authType': 'email', 'email': '' };\n    }\n    return reqObj;\n  }\n  /* End of Get Email Or Mobile Number Object */\n\n\n  public scrollToWindowToTop(): void {\n    window.scroll(0, 0);\n  }\n\n  public navigateToVahana(): void {\n    this.router.navigate(['auth/login']);\n  }\n\n}\n","module.exports = \"<div class=\\\"bgimg-1\\\">\\n    <div class=\\\"row card-form\\\">\\n      <div class=\\\"col s1 m4 l4 xl4\\\"></div>\\n       <div class=\\\"col s10 m4 l4 xl4\\\">\\n        <div class=\\\"card-panel\\\">\\n            <div class=\\\"center\\\">\\n              <img src=\\\"/assets/login/images/logo.png\\\" (click)=\\\"navigateToVahana()\\\" style=\\\"cursor: pointer\\\">\\n            </div>\\n            <div class=\\\"divInfo center\\\">\\n              <span class=\\\"heading\\\">Forgot Password?</span>\\n            </div>\\n            <span class=\\\"heading\\\">Step 02/02</span>\\n            <p>\\n            <span class=\\\"heading1\\\">Please create your new password.</span>\\n  \\n            <div id=\\\"forgotPasswordForm\\\">\\n              <form [formGroup]=\\\"newPasswordForm\\\" (ngSubmit)=\\\"submit()\\\">\\n                  <div class=\\\"input-field1\\\">\\n                      <label >New Password</label>\\n                      <input id=\\\"password\\\" placeholder=\\\"Enter New Password\\\" type=\\\"password\\\" class=\\\"validate\\\" formControlName=\\\"password\\\">\\n                      <small style=\\\"color:red;\\\"\\n                      *ngIf=\\\"(newPasswordForm.controls['password'].hasError('required')) &&\\n                      (newPasswordForm.controls['password'].dirty)\\\"\\n                      class=\\\"form-text text-muted\\\">\\n                      Password is mandatory\\n                    </small> \\n                    <small style=\\\"color:red;\\\"\\n                      *ngIf=\\\"(newPasswordForm.controls['password'].hasError('pattern')) &&\\n                      (newPasswordForm.controls['password'].dirty)\\\"\\n                      class=\\\"form-text text-muted\\\">\\n                      Please choose strong password\\n                    </small>                    \\n                    </div>\\n\\n                  <div class=\\\"input-field1\\\">\\n                      <label>Confirm Password</label>\\n                      <input id=\\\"confirmPassword\\\" placeholder=\\\"Confirm New Password\\\" type=\\\"password\\\" class=\\\"validate\\\" formControlName=\\\"confirmPassword\\\">\\n                      <small style=\\\"color:red;\\\"\\n                      *ngIf=\\\"(newPasswordForm.hasError('invalidPassword')) &&\\n                      (newPasswordForm.controls['confirmPassword'].dirty)\\\"\\n                      class=\\\"form-text text-muted\\\">\\n                      Password and confirm password mismatch\\n                    </small>                    \\n                    </div>\\n\\n  \\n                  <div class=\\\"row \\\">\\n                      <div class=\\\"input-field col s12 \\\">\\n                        <button [disabled]=\\\"newPasswordForm.invalid\\\" type=\\\"submit\\\" class=\\\"waves-effect btn sign-in-btn\\\">Set New Password</button>\\n                      </div>\\n                  </div>\\n                    <span>Haven’t joined Vahana yet?</span>\\n                  <span style=\\\"color:#2457a7;\\\" (click)=\\\"navigateToSignUp()\\\" > <u> Join free</u></span>\\n              </form>\\n            </div>\\n        </div>\\n       </div>\\n      <div class=\\\"col s1 m4 l4 xl4\\\"></div>\\n    </div>\\n  </div>\"","module.exports = \".bgimg-1 {\\n  height: calc(100vh);\\n  background-position: center 55%;\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  background-image: url(\\\"/assets/login/images/signup-bg.jpg\\\");\\n  -o-object-fit: contain;\\n     object-fit: contain; }\\n\\n.heading {\\n  font-family: 'Raleway-SemiBold';\\n  color: #757575;\\n  font-size: 16px; }\\n\\n.heading1 {\\n  font-family: 'Raleway-Regular';\\n  color: #757575;\\n  font-size: 14px; }\\n\\n.input-field1 label {\\n  font-size: 13px;\\n  text-align: left;\\n  width: 100%;\\n  float: left;\\n  margin-bottom: 2px;\\n  color: #2c60ad;\\n  margin-top: 5px; }\\n\\n.input-field1 input {\\n  border: 1px solid #b9b9b9;\\n  background: #fff;\\n  box-shadow: none;\\n  padding: 0 8px;\\n  border-radius: 4px;\\n  width: calc(100% - 20px);\\n  line-height: 25px;\\n  height: 38px;\\n  font-size: 13px;\\n  margin: 0px; }\\n\\n.sign-in-btn {\\n  width: 100%;\\n  background: #2457a7; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RlY2ltYWwvRGVjaW1hbC92YWhhbmEvdmFoYW5hLXBvcnRhbC1hdXRoZW50aWNhdGlvbi9zcmMvYXBwL2F1dGhlbnRpY2F0aW9uL25ldy1wYXNzd29yZC9uZXctcGFzc3dvcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQkFBbUI7RUFDbkIsK0JBQStCO0VBQy9CLDRCQUE0QjtFQUM1QixzQkFBc0I7RUFDdEIsMkRBQTJEO0VBQzNELHNCQUFtQjtLQUFuQixtQkFBbUIsRUFBQTs7QUFHdkI7RUFDSSwrQkFBK0I7RUFDL0IsY0FBYztFQUNkLGVBQWUsRUFBQTs7QUFHbkI7RUFDSSw4QkFBOEI7RUFDOUIsY0FBYztFQUNkLGVBQWUsRUFBQTs7QUFHbkI7RUFFUSxlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLFdBQVc7RUFDWCxXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLGNBQWM7RUFDZCxlQUFlLEVBQUE7O0FBUnZCO0VBWVEseUJBQXlCO0VBQ3pCLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsY0FBYztFQUNkLGtCQUFrQjtFQUNsQix3QkFBd0I7RUFDeEIsaUJBQWlCO0VBQ2pCLFlBQVk7RUFDWixlQUFlO0VBQ2YsV0FBVyxFQUFBOztBQUluQjtFQUNJLFdBQVc7RUFDWCxtQkFBbUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2F1dGhlbnRpY2F0aW9uL25ldy1wYXNzd29yZC9uZXctcGFzc3dvcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYmdpbWctMSB7XG4gICAgaGVpZ2h0OiBjYWxjKDEwMHZoKTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgNTUlO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvYXNzZXRzL2xvZ2luL2ltYWdlcy9zaWdudXAtYmcuanBnXCIpO1xuICAgIG9iamVjdC1maXQ6IGNvbnRhaW47XG59XG5cbi5oZWFkaW5ne1xuICAgIGZvbnQtZmFtaWx5OiAnUmFsZXdheS1TZW1pQm9sZCc7XG4gICAgY29sb3I6ICM3NTc1NzU7XG4gICAgZm9udC1zaXplOiAxNnB4O1xufVxuXG4uaGVhZGluZzF7XG4gICAgZm9udC1mYW1pbHk6ICdSYWxld2F5LVJlZ3VsYXInO1xuICAgIGNvbG9yOiAjNzU3NTc1O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbn1cblxuLmlucHV0LWZpZWxkMSB7XG4gICAgbGFiZWwge1xuICAgICAgICBmb250LXNpemU6IDEzcHg7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMnB4O1xuICAgICAgICBjb2xvcjogIzJjNjBhZDtcbiAgICAgICAgbWFyZ2luLXRvcDogNXB4O1xuICAgIH1cblxuICAgIGlucHV0IHtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2I5YjliOTtcbiAgICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgcGFkZGluZzogMCA4cHg7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDIwcHgpO1xuICAgICAgICBsaW5lLWhlaWdodDogMjVweDtcbiAgICAgICAgaGVpZ2h0OiAzOHB4O1xuICAgICAgICBmb250LXNpemU6IDEzcHg7XG4gICAgICAgIG1hcmdpbjogMHB4O1xuICAgIH1cbn1cblxuLnNpZ24taW4tYnRuIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kOiAjMjQ1N2E3O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { CustomValidators } from '../validators/custom.validaors';\nimport { LoaderService } from 'src/app/shared/loader/loader.service';\nimport { NotifyService } from 'src/app/shared/notify/notify.service';\nimport { UtilityService } from 'src/app/shared/services/platwareService/utility.service';\n\n@Component({\n  selector: 'app-new-password',\n  templateUrl: './new-password.component.html',\n  styleUrls: ['./new-password.component.scss']\n})\nexport class NewPasswordComponent implements OnInit {\n  public newPasswordForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private router: Router,\n    private authService: AuthService, private loaderService: LoaderService,\n    private notifyService: NotifyService, private utilityService: UtilityService) { }\n\n  ngOnInit() {\n    this.initForm();\n  }\n  public initForm() {\n    this.newPasswordForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.pattern('^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{9,16}$')]],\n      confirmPassword: ['', [Validators.required]]\n    }, { validators: CustomValidators.passwordMatcher });\n  }\n  submit() {\n    this.loaderService.showLoader();\n    debugger\n    this.authService.resetPassword(this.newPasswordForm.value.password).subscribe((resp) => {\n      if (resp) {\n        this.loaderService.hideLoader();\n        this.notifyService.showToast('Password reset successfully', 'success');\n        this.router.navigate(['auth/login']);\n      }\n    }, err => {\n      //HERE\n      this.utilityService.getError(err,'VAHANA_RESETPASSWORD');\n\n      err = err[Object.keys(err)[0]];\n      this.loaderService.hideLoader();\n      \n    });\n\n  }\n\n  public navigateToSignUp(): void {\n    this.router.navigate(['auth/signUp']);\n  }\n\n  public navigateToVahana(): void {\n    this.router.navigate(['auth/login']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PlatwareService } from 'src/app/shared/services/platwareService/platware.service';\nimport { ISignUp, IValidateFields } from '../requestResponseModel/request.interface';\nimport { Observable } from 'rxjs';\nimport { IResponse } from '../requestResponseModel/response.interface';\nimport { ValueConverter } from '@angular/compiler/src/render3/view/template';\nimport * as environment from '../../../environments/environment';\nimport * as PlatwareClient from '../../../../PlatwareClient';\nimport { HttpClient } from '@angular/common/http';\n@Injectable()\nexport class AuthService {\n\n   public forgotUserInput: object = {};\n    constructor(private platwareService: PlatwareService, private http: HttpClient) {}\n\n    /* Method for SignUp Api Call */\n      public signUp(signUpObject: ISignUp): Observable<IResponse> {\n        const body = {Create_User: [signUpObject]};\n        const header = {\n            custom_headers: JSON.stringify({\n              'Content-type': 'application/json'\n            })\n          };\n        return this.platwareService.callPlatware(body, header);\n      }\n\n    /* End of Method for SignUp Api Call */\n\n\n    /* Method for SignIn */\n    public signIn(signInObject, callBack): void {\n      const body = {AUTH_VAHANA: [signInObject]};\n      const header = {\n          custom_headers: JSON.stringify({\n            'Content-type': 'application/json'\n          })\n        };\n\n      PlatwareClient.executeApi(environment, body, header, callBack);\n      // return this.platwareService.callPlatware(body, header);\n    }\n\n\n    /* End of Method for SignIn */\n\n   /* Method for Checking the userExist or Not */\n   public validateFields(value: string, type: string): Observable<any> {\n\n    const body = {VAHANA_VALIDATE_FIELDS: [{}]};\n    const header = {\n        custom_headers: JSON.stringify({\n          'Content-type': 'application/json',\n          type: type,\n          value: value\n        })\n      };\n    console.log(body, header);\n    return this.platwareService.callPlatware(body, header);\n   }\n\n  /* Vahana reset Password */\n  public resetPassword(password: any): Observable<any> {\n    const resetReq = this.forgotUserInput;\n    resetReq['password'] = password;\n    console.log(resetReq);\n    const body = {VAHANA_RESETPASSWORD: [resetReq]};\n    const header = {\n        custom_headers: JSON.stringify({\n          'Content-type': 'application/json'\n        })\n      };\n    return this.platwareService.callPlatware(body, header);\n  }\n   /* End of Vahana reset Password */\n\n\n   public getCaptureKey(): Observable<any> {\n    return this.http.get('/assets/login/data/additionalData.json');\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { PlatwareService } from 'src/app/shared/services/platwareService/platware.service';\nimport { Observable } from 'rxjs';\nimport * as env from '../../../environments/environment';\nimport { UtilityService } from 'src/app/shared/services/platwareService/utility.service';\n\n@Injectable()\nexport class OTPService {\n\n    constructor(private platwareService: PlatwareService, private utilityService: UtilityService) {}\n\n    public generateOTP(mobileNumber: string): Observable<any>{\n        const reqBody = {\n          GETOTP: [{\n            serviceType: 'LOGIN',\n            reference: '123',\n            appId: env.environment.envProps['appId'],\n            orgId: env.environment.envProps['orgId'],\n            timestamp:  this.utilityService.getDateInISOFormat(),\n            mobile: mobileNumber\n          }]\n        };\n        console.log(reqBody);\n        const reqHeader = {\n          custom_headers: JSON.stringify({\n            'Content-type': 'application/json'\n          })\n        };\n        return this.platwareService.callPlatware(reqBody, reqHeader);\n       }\n\n\n       /* API Call to Validate OTP Entered By User */\n    public verfiyOTP(enteredOTP: string,refId: string): Observable<any> {\n        const reqBody = {\n            VERIFYOTP: [{\n              serviceType: 'LOGIN',\n              reference: refId,\n              timestamp:  this.utilityService.getDateInISOFormat(),\n              appId: env.environment.envProps['appId'],\n              orgId: env.environment.envProps['orgId'],\n              otp: enteredOTP\n            }]\n          };\n        const reqHeader = {\n            custom_headers: JSON.stringify({\n              'Content-type': 'application/json'\n            })\n          };\n        return this.platwareService.callPlatware(reqBody, reqHeader);\n    }\n    /* End of API Call to Validate OTP Entered By User */\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { IForm, IControl, IFormDetail } from '../requestResponseModel/control.interface';\nimport { delay, map } from 'rxjs/operators';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class ControlService {\n\n    private formGroup: FormGroup;\n    private iForm: IForm;\n    private formDetail: BehaviorSubject<IForm>;\n\n    constructor(private http: HttpClient ) {}\n\n    public getFormControl(control: IControl): FormControl {\n      return new FormControl('', this.getValidators(control));\n    }\n\n    public getValidators(control: IControl): any[] {\n      const validatorsArray = [];\n      if (this.isMandatory(control)) {\n        validatorsArray.push(Validators.required);\n      }\n      if (this.isRegex(control)) {\n        validatorsArray.push(Validators.pattern(control.regex));\n      }\n      if (this.isMinLength(control)) {\n        validatorsArray.push(Validators.minLength(+control.minLength));\n      }\n      if (this.isMaxLength(control)) {\n        validatorsArray.push(Validators.maxLength(+control.maxLength));\n      }\n      return validatorsArray;\n    }\n\n    /* method for Configuring Question Is Mandatory */\n    public isMandatory(question: IControl): boolean {\n      if (question.isMandatory) {\n        return question.isMandatory;\n      } else { return false; }\n    }\n    /* method for Configuring Question Is Mandatory */\n\n    /* method for Configuring Regex in formControl */\n    public isRegex(control: IControl): boolean {\n      /* This method check that if regex has length > 1 then return true othrwise false */\n      return control.regex && control.regex.length > 1;\n      /* End of this This method check that if regex has length > 1 then return true othrwise false */\n    }\n    /* method for Configuring Regex in formControl */\n\n    /* method for configuring min length */\n    public isMinLength(control: IControl): boolean {\n      return control.minLength !== '' && control.minLength !== null && !isNaN(+control.minLength);\n    }\n    /* method for configuring min length */\n\n    /* method for Configuring Max Length */\n    public isMaxLength(control: IControl) {\n      return control.maxLength !== '' && control.maxLength !== null && !isNaN(+control.maxLength);\n    }\n    /* End of  method for Configuring Max Length */\n\n\n    public getFormAPIData(): Observable<IForm>  {\n        this.formDetail = new BehaviorSubject<IForm>(null);\n\n        const timeStamp =  new Date().getTime();\n\n        this.http.get(`/assets/login/control.json?${timeStamp}`).pipe(delay(2)).subscribe((resp: any) => {\n          this.iForm = resp;\n          this.formDetail.next(this.iForm);\n        });\n        return this.formDetail;\n    }\n\n    public getFormData(): IForm {\n      return this.iForm;\n    }\n\n}\n","module.exports = \"<div class=\\\"bgimg-1\\\" *ngIf=\\\"iForm!== undefined\\\">\\n  <form [formGroup]=\\\"signUpForm\\\" (ngSubmit)=\\\"signUp()\\\" autocomplete=\\\"off\\\">\\n    <div class=\\\"row card-form\\\">\\n      <div class=\\\"col s1 m4 l4 xl4\\\"></div>\\n      <div class=\\\"col s10 m4 l4 xl4\\\">\\n        <div class=\\\"card-panel\\\">\\n          <div *ngIf=\\\"getFormData() | async\\\">\\n            <div class=\\\"center\\\">\\n              <img src=\\\"/assets/login/images/logo.png\\\" (click)=\\\"navigateToVahana()\\\" style=\\\"cursor: pointer\\\">\\n            </div>\\n            <div class=\\\"divInfo center\\\">\\n              <span class=\\\"infoText\\\" [innerHTML]=\\\"iForm.details\\\"></span>\\n            </div>\\n\\n\\n\\n            <div id=\\\"signUpForm\\\">\\n              <div class=\\\"input-field1\\\" *ngFor=\\\"let control of iForm.controls\\\">\\n                <label class=\\\"label\\\">{{control.label}}</label>\\n                <input (keyup)=\\\"keyUp.next({value:$event.target.value, control:control})\\\" [id]=\\\"control.id\\\" [placeholder]=\\\"control.placeHolder\\\" [type]=\\\"control?.type\\\" [formControlName]=\\\"control.id\\\" autocomplete=\\\"off\\\">\\n\\n                <small style=\\\"color:red;\\\" *ngIf=\\\"(signUpForm.controls[control.id].hasError('minlength'))\\\" class=\\\"form-text text-muted\\\">\\n                  {{control.label}} should be minimum of {{control.minLength}} character long\\n                </small>\\n                <small style=\\\"color:red;\\\" *ngIf=\\\"(signUpForm.controls[control.id].hasError('required')) &&  (signUpForm.controls[control.id].dirty)\\\" class=\\\"form-text text-muted\\\">\\n                  {{control.label}} is mandatory\\n                </small>\\n                <small style=\\\"color:red;\\\" *ngIf=\\\"(signUpForm.controls[control.id].hasError('duplicate')) &&  (signUpForm.controls[control.id].dirty)\\\" class=\\\"form-text text-muted\\\">\\n                  {{emailErrorMessage}}. Please choose different {{control.label}}\\n                </small>\\n                <small style=\\\"color:red;\\\" *ngIf=\\\"(signUpForm.hasError('invalidPassword')) && (signUpForm.controls['confirmPassword'].dirty) && control.id === 'confirmPassword' \\\" class=\\\"form-text text-muted\\\">\\n                  Password and confirm password mismatch\\n                </small>\\n                <small style=\\\"color:red;\\\" *ngIf=\\\"(signUpForm.controls[control.id].hasError('pattern')) &&  (signUpForm.controls[control.id].dirty)\\\" class=\\\"form-text text-muted\\\">\\n                  <span *ngIf=\\\"control.id !== 'password'\\\">Please enter in correct format</span>\\n                  <span *ngIf=\\\"control.id=== 'password'\\\"> Your password must be at least 8 characters long and must contain special charectors and numbers. Please try another. </span>\\n                </small>\\n\\n              </div>\\n            </div>\\n\\n            <div style=\\\"margin-top: 12px;\\\">\\n              <!-- <ngx-recaptcha2 #captchaElem [siteKey]=\\\"captcha\\\" [useGlobalDomain]=\\\"false\\\"\\n                [size]=\\\"size\\\" [hl]=\\\"lang\\\" [theme]=\\\"theme\\\" [type]=\\\"type\\\" formControlName=\\\"recaptcha\\\">\\n              </ngx-recaptcha2> -->\\n\\n            </div>\\n\\n\\n            <div>\\n              <button type=\\\"submit\\\" [disabled]=\\\"signUpForm.invalid\\\" class=\\\"btn sign-in-btn\\\">Join\\n                VAHANA</button>\\n            </div>\\n            <p class=\\\"font12 center\\\">Already have an account? <a (click)=\\\"navigateToLogin()\\\">Sign In</a></p>\\n          </div>\\n\\n\\n        </div>\\n\\n\\n      </div>\\n      <div class=\\\"col s1 m4 l4 xl4\\\"></div>\\n    </div>\\n  </form>\\n</div>\\n\"","module.exports = \".bgimg-1 {\\n  height: auto;\\n  background-position: center 55%;\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  background-image: url(\\\"/assets/login/images/signup-bg.jpg\\\");\\n  -o-object-fit: contain;\\n     object-fit: contain; }\\n\\n.card-panel {\\n  transition: box-shadow .25s;\\n  padding: 24px;\\n  margin: .5rem 0 1rem 0;\\n  border-radius: 2px;\\n  background-color: #fff; }\\n\\n.infoText {\\n  font-size: 16px;\\n  color: grey;\\n  font-weight: 500; }\\n\\n.divInfo {\\n  padding-left: 70px;\\n  padding-right: 75px; }\\n\\n.input-field1 label {\\n  font-size: 15px;\\n  text-align: left;\\n  width: 100%;\\n  float: left;\\n  margin-bottom: 2px;\\n  margin-top: 20px;\\n  color: #2457a7;\\n  font-family: 'Raleway-Regular'; }\\n\\n.input-field1 input {\\n  border: 1px solid #b9b9b9;\\n  background: #fff;\\n  box-shadow: none;\\n  padding: 0 8px;\\n  border-radius: 4px;\\n  width: calc(100% - 20px);\\n  line-height: 25px;\\n  height: 38px;\\n  font-size: 13px;\\n  margin: 0px; }\\n\\n.sign-in-btn {\\n  width: 100%;\\n  background: #2457a7;\\n  -webkit-margin-before: 17px;\\n          margin-block-start: 17px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RlY2ltYWwvRGVjaW1hbC92YWhhbmEvdmFoYW5hLXBvcnRhbC1hdXRoZW50aWNhdGlvbi9zcmMvYXBwL2F1dGhlbnRpY2F0aW9uL3NpZ24tdXAvc2lnbi11cC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLFlBQVk7RUFDWiwrQkFBK0I7RUFDL0IsNEJBQTRCO0VBQzVCLHNCQUFzQjtFQUN0QiwyREFBMkQ7RUFDM0Qsc0JBQW1CO0tBQW5CLG1CQUFtQixFQUFBOztBQUd2QjtFQUNJLDJCQUEyQjtFQUMzQixhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLGtCQUFrQjtFQUNsQixzQkFBc0IsRUFBQTs7QUFHMUI7RUFFSSxlQUFlO0VBQ2YsV0FBVztFQUNYLGdCQUFnQixFQUFBOztBQUdwQjtFQUNJLGtCQUFrQjtFQUNsQixtQkFBbUIsRUFBQTs7QUFHdkI7RUFFUSxlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLFdBQVc7RUFDWCxXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2QsOEJBQThCLEVBQUE7O0FBVHRDO0VBYVEseUJBQXlCO0VBQ3pCLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsY0FBYztFQUNkLGtCQUFrQjtFQUNsQix3QkFBd0I7RUFDeEIsaUJBQWlCO0VBQ2pCLFlBQVk7RUFDWixlQUFlO0VBQ2YsV0FBVyxFQUFBOztBQUluQjtFQUNJLFdBQVc7RUFDWCxtQkFBbUI7RUFDbkIsMkJBQXdCO1VBQXhCLHdCQUF3QixFQUFBIiwiZmlsZSI6InNyYy9hcHAvYXV0aGVudGljYXRpb24vc2lnbi11cC9zaWduLXVwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4uYmdpbWctMSB7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciA1NSU7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9hc3NldHMvbG9naW4vaW1hZ2VzL3NpZ251cC1iZy5qcGdcIik7XG4gICAgb2JqZWN0LWZpdDogY29udGFpbjtcbn1cblxuLmNhcmQtcGFuZWwge1xuICAgIHRyYW5zaXRpb246IGJveC1zaGFkb3cgLjI1cztcbiAgICBwYWRkaW5nOiAyNHB4O1xuICAgIG1hcmdpbjogLjVyZW0gMCAxcmVtIDA7XG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG59XG5cbi5pbmZvVGV4dFxue1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBjb2xvcjogZ3JleTtcbiAgICBmb250LXdlaWdodDogNTAwO1xufVxuXG4uZGl2SW5mb3tcbiAgICBwYWRkaW5nLWxlZnQ6IDcwcHg7XG4gICAgcGFkZGluZy1yaWdodDogNzVweDtcbn1cblxuLmlucHV0LWZpZWxkMSB7XG4gICAgbGFiZWwge1xuICAgICAgICBmb250LXNpemU6IDE1cHg7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMnB4O1xuICAgICAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICAgICAgICBjb2xvcjogIzI0NTdhNztcbiAgICAgICAgZm9udC1mYW1pbHk6ICdSYWxld2F5LVJlZ3VsYXInO1xuICAgIH1cblxuICAgIGlucHV0IHtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2I5YjliOTtcbiAgICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgcGFkZGluZzogMCA4cHg7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDIwcHgpO1xuICAgICAgICBsaW5lLWhlaWdodDogMjVweDtcbiAgICAgICAgaGVpZ2h0OiAzOHB4O1xuICAgICAgICBmb250LXNpemU6IDEzcHg7XG4gICAgICAgIG1hcmdpbjogMHB4O1xuICAgIH1cbn1cblxuLnNpZ24taW4tYnRuIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kOiAjMjQ1N2E3O1xuICAgIG1hcmdpbi1ibG9jay1zdGFydDogMTdweDtcbn1cblxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  FormControl,\n  Validators\n} from '@angular/forms';\nimport { ControlService } from './control.service';\nimport {\n  IFormDetail,\n  IControl,\n  IForm\n} from '../requestResponseModel/control.interface';\nimport { BehaviorSubject, Observable, Subject, of } from 'rxjs';\nimport { ReCaptchaV3Service } from 'ngx-captcha';\nimport { AuthService } from '../services/auth.service';\nimport { ISignUp } from '../requestResponseModel/request.interface';\nimport { IResponse } from '../requestResponseModel/response.interface';\nimport { LoaderService } from 'src/app/shared/loader/loader.service';\nimport { debounceTime, distinctUntilChanged, switchMap, map, flatMap, delay } from 'rxjs/operators';\nimport { NotifyService } from 'src/app/shared/notify/notify.service';\nimport { Router } from '@angular/router';\nimport { CustomValidators } from '../validators/custom.validaors';\nimport { UtilityService } from 'src/app/shared/services/platwareService/utility.service';\nimport { AppConstant } from 'src/app/shared/services/AppConstant';\n\ndeclare const $: any;\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit {\n  public signUpForm: FormGroup;\n  public iFormCallback = new BehaviorSubject<IFormDetail>(null);\n  public iForm: IFormDetail;\n  private validateFields = new Subject<string>();\n  private activeControl: any;\n  private emailErrorMessage: String;\n  public keyUp = new Subject<KeyboardEvent>();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public controlService: ControlService,\n    private reCaptchaV3Service: ReCaptchaV3Service,\n    private authService: AuthService,\n    private loaderService: LoaderService,\n    private notifyService: NotifyService,\n    private router: Router,\n    private utilityService: UtilityService\n  ) {\n    this.getFormDataAPI();\n    this.subscribeKeyUp();\n\n  }\n\n  private addRecapture() {\n    if (this.iForm.isCaptchaRequired) {\n      // this.reCaptchaV3Service.execute('6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI', 'homepage', (token) => {\n      //   console.log('This is your token: ', token);\n      // }, {\n      //     useGlobalDomain: false\n      // });\n    }\n  }\n\n  public handleSuccess(event) {\n    console.log(event);\n  }\n  public click(event) {\n    console.log(this.signUpForm);\n  }\n\n  private addContols() {\n    const contols = this.iForm.controls;\n    for (let i = 0; i < contols.length; i++) {\n      this.signUpForm.addControl(\n        contols[i].id.toString(),\n        this.controlService.getFormControl(contols[i])\n      );\n    }\n    // this.signUpForm.addControl(\n    //   \"TermsCondition\",\n    //   new FormControl(\"\", [Validators.required, Validators.pattern(\"true\")])\n    // );\n    if (this.iForm.isCaptchaRequired) {\n      //  this.signUpForm.addControl('recaptcha', new FormControl('', [Validators.required]));\n    }\n    this.signUpForm.setValidators(CustomValidators.passwordMatcher);\n  }\n\n  public getFormData(): Observable<IFormDetail> {\n    return this.iFormCallback.asObservable();\n  }\n\n  ngOnInit() {\n\n    setTimeout(() => {\n      $(document).ready(function() {\n        $('.tooltipped').tooltip();\n      });\n\n    }, 500)\n\n\n    this.signUpForm = this.formBuilder.group({});\n    this.initValidateFields();\n  }\n\n  public getFormGroup() { }\n\n  /*This method takes sign up form value from html */\n  public signUp() {\n\n    console.log(this.signUpForm.value as ISignUp);\n\n    this.loaderService.showLoader();\n    this.authService.signUp(this.signUpForm.value as ISignUp).subscribe(\n      (resp: IResponse) => {\n        console.log(resp);\n        if (resp) {\n          this.loaderService.hideLoader();\n          this.notifyService.showToast('successfully registered', 'success');\n          let email = this.signUpForm.value.email;\n          this.utilityService.setLocalStorage(AppConstant.SIGNUP_EMAIL, email);\n          this.router.navigate(['auth/login']);\n        }\n      },\n      err => {\n        //HERE\n        this.utilityService.getError(err, 'Create_User');\n        this.loaderService.hideLoader();\n        console.log(err);\n        err = err[Object.keys(err)[0]];\n\n      }\n    );\n  }\n\n  /*End of This method takes sign up form value from html */\n\n  public initValidateFields() {\n    this.validateFields\n      .pipe(\n        debounceTime(500),\n        distinctUntilChanged()\n      )\n      .subscribe(searchText => {\n        this.validateSearch(searchText);\n      });\n  }\n\n  /* This method performs the API Call for search  */\n  public validateSearch(value): Observable<any> {\n    this.authService\n      .validateFields(value, this.activeControl.controlType)\n      .subscribe(\n        resp => {\n          console.log(resp);\n        },\n        err => {\n          //HERE\n          console.log(err);\n          this.utilityService.getError(err, 'VAHANA_VALIDATE_FIELDS');\n          err = err[Object.keys(err)[0]];\n          this.emailErrorMessage = err.message;\n          this.signUpForm.controls[this.activeControl.id].setErrors({\n            duplicate: true\n          });\n        }\n      );\n    return of('');\n  }\n\n  /* This method set the value passed from html for fileds for valodation */\n  checiIfExist(textValue: string, control: any) {\n    this.signUpForm.controls[control.id].valueChanges\n      .pipe(\n        debounceTime(400),\n        distinctUntilChanged()\n      )\n      .subscribe(value => {\n        if (control.isAPIToCheck) {\n          this.activeControl = control;\n          this.validateFields.next(value);\n        }\n      });\n  }\n\n  public navigateToLogin(): void {\n    this.router.navigate(['auth/login']);\n  }\n\n  public navigateToVahana(): void {\n    this.router.navigate(['auth/login']);\n  }\n\n  /* Get form json Data */\n  public getFormDataAPI(): void {\n    this.loaderService.showLoader();\n    this.controlService.getFormAPIData().subscribe(\n      value => {\n        if (value) {\n          this.iFormCallback.next(value.signUpForm);\n          this.iForm = value.signUpForm;\n          this.addContols();\n          this.addRecapture();\n          this.loaderService.hideLoader();\n        }\n      },\n      err => {\n        this.loaderService.hideLoader();\n      }\n    );\n  }\n\n  public subscribeKeyUp(): void {\n    this.keyUp.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      flatMap(data => of(data).pipe(delay(0)))\n    ).subscribe((data: any) => {\n      if (data.control.isAPIToCheck && this.signUpForm.controls[data.control.id].valid) {\n        this.activeControl = data.control;\n        this.validateSearch(data.value);\n      }\n    });\n  }\n\n\n}\n","import { AbstractControl } from '@angular/forms';\n\nexport class CustomValidators{\n\n    /* Password Matcher */\n    static passwordMatcher(group: any){\n        const password = group.controls.password;\n        const confirm = group.controls.confirmPassword;\n        if (password.pristine || confirm.pristine) {\n           return null;\n        }\n        group.markAsTouched();\n        if (password.value === confirm.value) {\n           return null;\n        }\n        return {\n           invalidPassword: true\n        };\n     }\n     /*End of Password Matcher */\n}","module.exports = \"<div class=\\\"center\\\" *ngIf=\\\"isOTPLoader\\\" style=\\\"padding-top: 5px;\\\">\\n<div class=\\\"preloader-wrapper small active\\\">\\n    <div class=\\\"spinner-layer spinner-green-only\\\">\\n      <div class=\\\"circle-clipper left\\\">\\n        <div class=\\\"circle\\\"></div>\\n      </div><div class=\\\"gap-patch\\\">\\n        <div class=\\\"circle\\\"></div>\\n      </div><div class=\\\"circle-clipper right\\\">\\n        <div class=\\\"circle\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<form [formGroup]=\\\"groupName\\\" *ngIf=\\\"!isOTPLoader && (otpArrayClassName.length>0)\\\">\\n  <label>Confirm OTP</label>\\n  <table border=\\\"0\\\">\\n    <tr>\\n      <td *ngFor=\\\"let formName of otpArrayClassName;let i = index;\\\" >\\n        <input  type=\\\"number\\\" class=\\\"{{formName}}\\\" [formControlName]=\\\"formName\\\" onKeyDown=\\\"if(this.value.length==1 && event.keyCode!=8) return false;\\\" (keyup)=\\\"next($event,formName,i)\\\">\\n      </td>\\n    </tr>\\n  </table>\\n  <div style=\\\"margin-top: -3%\\\"><p style=\\\"font-size: 12px; text-align: right\\\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Haven't recieved OTP yet? <strong style=\\\"color: #ef5350; cursor: pointer;\\\" (click)=\\\"generateOTP(true)\\\">Request again!</strong> </p></div>\\n</form>\"","module.exports = \"table {\\n  border-collapse: unset; }\\n\\ninput[type=number] {\\n  height: 40px;\\n  width: 40px;\\n  border: 1px solid navy;\\n  text-align: center; }\\n\\n.spinner-layer {\\n  position: absolute;\\n  width: 90%;\\n  height: 90%;\\n  opacity: 0;\\n  border-color: #303f9f; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RlY2ltYWwvRGVjaW1hbC92YWhhbmEvdmFoYW5hLXBvcnRhbC1hdXRoZW50aWNhdGlvbi9zcmMvYXBwL2F1dGhlbnRpY2F0aW9uL3ZlcmlmeS1vdHAvdmVyaWZ5LW90cC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHNCQUFzQixFQUFBOztBQUcxQjtFQUNJLFlBQVk7RUFDWixXQUFXO0VBQ1gsc0JBQXNCO0VBQUMsa0JBQWtCLEVBQUE7O0FBRzdDO0VBQ0ksa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixXQUFXO0VBQ1gsVUFBVTtFQUNWLHFCQUFxQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvYXV0aGVudGljYXRpb24vdmVyaWZ5LW90cC92ZXJpZnktb3RwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGV7XG4gICAgYm9yZGVyLWNvbGxhcHNlOiB1bnNldDtcbn1cblxuaW5wdXRbdHlwZT1udW1iZXJde1xuICAgIGhlaWdodDogNDBweDtcbiAgICB3aWR0aDogNDBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBuYXZ5O3RleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnNwaW5uZXItbGF5ZXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogOTAlO1xuICAgIGhlaWdodDogOTAlO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgYm9yZGVyLWNvbG9yOiAjMzAzZjlmO1xufSJdfQ== */\"","import { Component, OnInit, Input, ElementRef, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { OTPService } from '../services/otp.service';\nimport { NotifyService } from 'src/app/shared/notify/notify.service';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { UtilityService } from 'src/app/shared/services/platwareService/utility.service';\n\n\n@Component({\n  selector: 'app-verify-otp',\n  templateUrl: './verify-otp.component.html',\n  styleUrls: ['./verify-otp.component.scss']\n})\nexport class VerifyOTPComponent implements OnInit, OnDestroy {\n  @Input() groupName: FormGroup;\n  @Input() isSetNewPassword: BehaviorSubject<boolean>;\n  @Output() optFilled: EventEmitter<boolean>;\n  public otpArrayClassName: Array<string> = [];\n  public otpLength = 6;\n  private mobileNumber: string;\n  private referenceId: string;\n  public isOTPLoader: boolean;\n  constructor(private element: ElementRef, private otpService: OTPService,\n              private notifyService: NotifyService, private router: Router,\n              private utilityService: UtilityService) {\n      this.optFilled = new EventEmitter();\n     }\n\n  ngOnInit() {\n    this.generateOTP();\n    this.initIsSetNewPassword();\n    this.groupName.setErrors(null);\n  }\n\n\n  /* Initialize OTP Form */\n  public initOTPForm(): void {\n    for (let i = 0; i < this.otpLength; i++) {\n      this.groupName.addControl('digit' + i, new FormControl('', Validators.required));\n      this.otpArrayClassName.push('digit' + i);\n    }\n  }\n\n  /* End of Initialization form */\n\n\n  /* set Focus Back */\n  private setFocusBack(className: string, index: string) {\n    if ((+index) === (0)) {\n      return;\n    }\n    const nextIndex = +(index) - 1;\n    className = className.substring(0, className.length - 1) + nextIndex;\n    const divToScroll = this.element.nativeElement.querySelector('.' + className);\n    setTimeout(() => {\n      divToScroll.focus();\n    }, 0);\n  }\n\n\n  public setFocus(className: string, index: string) {\n    if (this.combineOTP().length === this.otpLength) {\n      this.optFilled.emit(true);\n    } else {\n      this.optFilled.emit(false);\n    }\n    if ((+index) === this.otpArrayClassName.length - 1) {\n      return;\n    }\n    const nextIndex = +(index) + 1;\n    className = className.substring(0, className.length - 1) + nextIndex;\n    const divToScroll = this.element.nativeElement.querySelector('.' + className);\n    setTimeout(() => {\n      divToScroll.focus();\n    }, 0);\n  }\n\n  /* End of set focous of Input forward */\n\n\n  public combineOTP(): string {\n    let otp = '';\n    const enteredOTPFormObj = Object.assign(this.groupName.value);\n    delete enteredOTPFormObj.userInput;\n    Object.keys(this.groupName.value).forEach((value) => {\n      otp += this.groupName.value[value];\n    });\n    return otp;\n  }\n\n  public next(event, className: string, index: string): void {\n    if (event.code === 'Backspace' || event.keyCode === 8) {\n      event.preventDefault();\n      this.setFocusBack(className, index);\n      return;\n    } else {\n      this.setFocus(className, index);\n    }\n  }\n\n\n  public generateOTP(isRequestAgain: boolean = false): void {\n    // userInput = mobileNumber\n    this.isOTPLoader = true;\n    this.otpService.generateOTP(this.groupName.value.userInput).subscribe((response) => {\n      if (response) {\n        response = response[Object.keys(response)[0]];\n        if (!isRequestAgain) { this.initOTPForm(); } else { this.resetOTPFormControl(); }\n        this.referenceId = response.referance;\n        this.isOTPLoader = false;\n      }\n    },\n      error => {\n        // HERE\n        console.log(error);\n       \n        error = error[Object.keys(error)[0]];\n        this.isOTPLoader = false;\n        this.utilityService.getError(error,'GETOTP')\n        this.isSetNewPassword.next(false);\n      });\n  }\n\n\n  /* This method validates the OTP */\n  private validateOTP() {\n    if (this.combineOTP().length === this.otpLength) {\n      this.otpService.verfiyOTP(this.combineOTP(), this.referenceId).subscribe((response) => {\n        if (response) {\n          response = response[Object.keys(response)[0]];\n          this.notifyService.showToast(response.message, 'success');\n          this.navigateToNewPassword();\n        }\n      },\n        error => {\n          // HERE\n          console.log(error);\n\n          error = error[Object.keys(error)[0]];\n          // this.isSetNewPassword.next(false);\n          this.utilityService.getError(error,'VERIFYOTP');\n        });\n    } else {\n      this.notifyService.showToast('Please enter OTP', 'error');\n    }\n  }\n  /* End of This method validates the OTP */\n\n  public navigateToNewPassword() {\n    this.router.navigate(['auth/newPassword']);\n  }\n\n  public initIsSetNewPassword() {\n    this.isSetNewPassword.subscribe((flag: boolean) => {\n      if (flag) {\n        this.validateOTP();\n      } else { return; }\n    });\n  }\n\n\n  public ngOnDestroy(): void {\n    this.removeOTPFormControl();\n  }\n\n  public removeOTPFormControl(): void {\n    for (let i = 0; i < this.otpLength; i++) {\n      this.groupName.removeControl('digit' + i);\n    }\n    this.otpArrayClassName = [];\n  }\n\n  public resetOTPFormControl(): void {\n    for (let i = 0; i < this.otpLength; i++) {\n      this.groupName.controls['digit' + i].reset();\n    }\n  }\n\n  public navigateToVahana(): void {\n    this.router.navigate(['auth/login']);\n  }\n\n\n}\n"],"sourceRoot":""}